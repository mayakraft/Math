!function(t,n){"object"==typeof exports&&"undefined"!=typeof module?module.exports=n():"function"==typeof define&&define.amd?define(n):(t="undefined"!=typeof globalThis?globalThis:t||self).math=n()}(this,(function(){"use strict";const t=function(t){switch(t.constructor.name){case"vector":case"matrix":case"segment":case"ray":case"line":case"circle":case"ellipse":case"rect":case"polygon":return t.constructor.name}if("object"==typeof t){if(null!=t.radius)return"circle";if(null!=t.width)return"rect";if(null!=t.x||"number"==typeof t[0])return"vector";if(null!=t[0]&&t[0].length&&("number"==typeof t[0].x||"number"==typeof t[0][0]))return"segment";if(null!=t.vector&&null!=t.origin)return"line"}},n=(t,n)=>n.length===t?n:Array(t).fill(0).map(((t,e)=>n[e]?n[e]:t)),e=(t,e)=>{const r=t.length>e.length?t.length:e.length;return[t,e].map((t=>n(r,t)))},r=function(t){const n=`${t}`.match(/(?:\.(\d+))?(?:[eE]([+-]?\d+))?$/);return n?Math.max(0,(n[1]?n[1].length:0)-(n[2]?+n[2]:0)):0},i=function(t,n=15){if("number"!=typeof t)return t;const e=parseFloat(t.toFixed(n));return r(e)===Math.min(n,r(t))?t:e},o=t=>null!=t&&"function"==typeof t[Symbol.iterator],s=function(){switch(arguments.length){case void 0:case 0:return Array.from(arguments);case 1:return o(arguments[0])&&"string"!=typeof arguments[0]?s(...arguments[0]):[arguments[0]];default:return Array.from(arguments).map((t=>o(t)?[...s(t)]:t))}},c=function(){switch(arguments.length){case void 0:case 0:return Array.from(arguments);case 1:return o(arguments[0])&&"string"!=typeof arguments[0]?c(...arguments[0]):[arguments[0]];default:return Array.from(arguments).map((t=>o(t)?[...c(t)]:t)).reduce(((t,n)=>t.concat(n)),[])}};var a=Object.freeze({__proto__:null,resize:n,resizeUp:e,resizeDown:(t,e)=>{const r=t.length>e.length?e.length:t.length;return[t,e].map((t=>n(r,t)))},cleanNumber:i,semiFlattenArrays:s,flattenArrays:c}),u=Object.create(null);const h=1e-6,l=180/Math.PI,f=Math.PI/180,p=2*Math.PI;var m=Object.freeze({__proto__:null,EPSILON:h,R2D:l,D2R:f,TWO_PI:p});const g=()=>!0,d=t=>t*t,y=(t,n)=>t+(n||0),v=t=>void 0!==t,M=t=>Math.atan2(t[1],t[0]),x=t=>[Math.cos(t),Math.sin(t)],b=(t,n,e=h)=>Math.abs(t-n)<e,_=(t,n,e=h)=>b(t,n,e)?0:Math.sign(n-t),P=(t,n,e=h)=>{for(let r=0;r<Math.max(t.length,n.length);r+=1)if(!b(t[r]||0,n[r]||0,e))return!1;return!0},O=(t,n=h)=>t>-n,A=(t,n=h)=>t>n,j=g,k=g,w=O,$=A,S=(t,n=h)=>t>-n&&t<1+n,z=(t,n=h)=>t>n&&t<1-n,C=t=>t<-h?0:t,I=t=>t<-h?0:t>1.000001?1:t;var L=Object.freeze({__proto__:null,fnTrue:g,fnSquare:d,fnAdd:y,fnNotUndefined:v,fnAnd:(t,n)=>t&&n,fnCat:(t,n)=>t.concat(n),fnVec2Angle:M,fnToVec2:x,fnEqual:(t,n)=>t===n,fnEpsilonEqual:b,fnEpsilonSort:_,fnEpsilonEqualVectors:P,include:O,exclude:A,includeL:j,excludeL:k,includeR:w,excludeR:$,includeS:S,excludeS:z,lineLimiter:t=>t,rayLimiter:C,segmentLimiter:I});const N=t=>Math.sqrt(t.map(d).reduce(y,0)),E=t=>Math.sqrt(t[0]*t[0]+t[1]*t[1]),q=t=>t.map(d).reduce(y,0),R=t=>{const n=N(t);return 0===n?t:t.map((t=>t/n))},G=t=>{const n=E(t);return 0===n?t:[t[0]/n,t[1]/n]},T=(t,n)=>t.map((t=>t*n)),V=(t,n)=>[t[0]*n,t[1]*n],B=(t,n)=>t.map(((t,e)=>t+(n[e]||0))),D=(t,n)=>[t[0]+n[0],t[1]+n[1]],F=(t,n)=>t.map(((t,e)=>t-(n[e]||0))),Z=(t,n)=>[t[0]-n[0],t[1]-n[1]],H=(t,n)=>t.map(((e,r)=>t[r]*n[r])).reduce(y,0),U=(t,n)=>t[0]*n[0]+t[1]*n[1],X=(t,n)=>t.map(((t,e)=>(t+n[e])/2)),Y=function(){if(0===arguments.length)return[];const t=arguments[0].length>0?arguments[0].length:0,n=Array(t).fill(0);return Array.from(arguments).forEach((t=>n.forEach(((e,r)=>{n[r]+=t[r]||0})))),n.map((t=>t/arguments.length))},W=(t,n,e)=>{const r=1-e;return t.map(((t,i)=>t*r+(n[i]||0)*e))},J=(t,n)=>t[0]*n[1]-t[1]*n[0],K=(t,n)=>[t[1]*n[2]-t[2]*n[1],t[2]*n[0]-t[0]*n[2],t[0]*n[1]-t[1]*n[0]],Q=(t,n)=>Math.sqrt(t.map(((e,r)=>(t[r]-n[r])**2)).reduce(y,0)),tt=(t,n)=>{const e=t[0]-n[0],r=t[1]-n[1];return Math.sqrt(e*e+r*r)},nt=t=>t.map((t=>-t)),et=t=>[-t[1],t[0]],rt=t=>[t[1],-t[0]],it=(t,n=h)=>t.map((t=>Math.abs(t))).reduce(y,0)<n,ot=(t,n,e=h)=>1-Math.abs(H(R(t),R(n)))<e;var st=Object.freeze({__proto__:null,magnitude:N,magnitude2:E,magSquared:q,normalize:R,normalize2:G,scale:T,scale2:V,add:B,add2:D,subtract:F,subtract2:Z,dot:H,dot2:U,midpoint:X,midpoint2:(t,n)=>V(D(t,n),.5),average:Y,lerp:W,cross2:J,cross3:K,distance:Q,distance2:tt,distance3:(t,n)=>{const e=t[0]-n[0],r=t[1]-n[1],i=t[2]-n[2];return Math.sqrt(e*e+r*r+i*i)},flip:nt,rotate90:et,rotate270:rt,degenerate:it,parallel:ot,parallel2:(t,n,e=h)=>Math.abs(J(t,n))<e});const ct=Object.freeze([1,0,0,0,1,0,0,0,1]),at=Object.freeze(ct.concat(0,0,0)),ut=t=>at.map(((n,e)=>Math.abs(n-t[e])<h)).reduce(((t,n)=>t&&n),!0),ht=(t,n)=>[t[0]*n[0]+t[3]*n[1]+t[6]*n[2]+t[9],t[1]*n[0]+t[4]*n[1]+t[7]*n[2]+t[10],t[2]*n[0]+t[5]*n[1]+t[8]*n[2]+t[11]],lt=(t,n,e)=>({vector:[t[0]*n[0]+t[3]*n[1]+t[6]*n[2],t[1]*n[0]+t[4]*n[1]+t[7]*n[2],t[2]*n[0]+t[5]*n[1]+t[8]*n[2]],origin:[t[0]*e[0]+t[3]*e[1]+t[6]*e[2]+t[9],t[1]*e[0]+t[4]*e[1]+t[7]*e[2]+t[10],t[2]*e[0]+t[5]*e[1]+t[8]*e[2]+t[11]]}),ft=(t,n)=>[t[0]*n[0]+t[3]*n[1]+t[6]*n[2],t[1]*n[0]+t[4]*n[1]+t[7]*n[2],t[2]*n[0]+t[5]*n[1]+t[8]*n[2],t[0]*n[3]+t[3]*n[4]+t[6]*n[5],t[1]*n[3]+t[4]*n[4]+t[7]*n[5],t[2]*n[3]+t[5]*n[4]+t[8]*n[5],t[0]*n[6]+t[3]*n[7]+t[6]*n[8],t[1]*n[6]+t[4]*n[7]+t[7]*n[8],t[2]*n[6]+t[5]*n[7]+t[8]*n[8],t[0]*n[9]+t[3]*n[10]+t[6]*n[11]+t[9],t[1]*n[9]+t[4]*n[10]+t[7]*n[11]+t[10],t[2]*n[9]+t[5]*n[10]+t[8]*n[11]+t[11]],pt=t=>t[0]*t[4]*t[8]-t[0]*t[7]*t[5]-t[3]*t[1]*t[8]+t[3]*t[7]*t[2]+t[6]*t[1]*t[5]-t[6]*t[4]*t[2],mt=t=>{const n=pt(t);if(Math.abs(n)<1e-6||Number.isNaN(n)||!Number.isFinite(t[9])||!Number.isFinite(t[10])||!Number.isFinite(t[11]))return;const e=[t[4]*t[8]-t[7]*t[5],-t[1]*t[8]+t[7]*t[2],t[1]*t[5]-t[4]*t[2],-t[3]*t[8]+t[6]*t[5],t[0]*t[8]-t[6]*t[2],-t[0]*t[5]+t[3]*t[2],t[3]*t[7]-t[6]*t[4],-t[0]*t[7]+t[6]*t[1],t[0]*t[4]-t[3]*t[1],-t[3]*t[7]*t[11]+t[3]*t[8]*t[10]+t[6]*t[4]*t[11]-t[6]*t[5]*t[10]-t[9]*t[4]*t[8]+t[9]*t[5]*t[7],t[0]*t[7]*t[11]-t[0]*t[8]*t[10]-t[6]*t[1]*t[11]+t[6]*t[2]*t[10]+t[9]*t[1]*t[8]-t[9]*t[2]*t[7],-t[0]*t[4]*t[11]+t[0]*t[5]*t[10]+t[3]*t[1]*t[11]-t[3]*t[2]*t[10]-t[9]*t[1]*t[5]+t[9]*t[2]*t[4]],r=1/n;return e.map((t=>t*r))},gt=(t=0,n=0,e=0)=>ct.concat(t,n,e),dt=(t,n,e,r,i)=>{const o=ct.concat([0,1,2].map((t=>n[t]||0))),s=Math.cos(t),c=Math.sin(t);return o[3*e+e]=s,o[3*e+r]=(i?1:-1)*c,o[3*r+e]=(i?-1:1)*c,o[3*r+r]=s,o},yt=(t,n=[0,0,0])=>dt(t,n,1,2,!0),vt=(t,n=[0,0,0])=>dt(t,n,0,2,!1),Mt=(t,n=[0,0,0])=>dt(t,n,0,1,!0),xt=(t,e=[0,0,1],r=[0,0,0])=>{const i=[0,1,2].map((t=>r[t]||0)),[o,s,c]=n(3,R(e)),a=Math.cos(t),u=Math.sin(t),h=1-a,l=ct.concat(-i[0],-i[1],-i[2]),f=ct.concat(i[0],i[1],i[2]);return ft(f,ft([h*o*o+a,h*s*o+c*u,h*c*o-s*u,h*o*s-c*u,h*s*s+a,h*c*s+o*u,h*o*c+s*u,h*s*c-o*u,h*c*c+a,0,0,0],l))},bt=(t=1,n=[0,0,0])=>[t,0,0,0,t,0,0,0,t,t*-n[0]+n[0],t*-n[1]+n[1],t*-n[2]+n[2]],_t=(t,n=[0,0])=>{const e=Math.atan2(t[1],t[0]),r=Math.cos(e),i=Math.sin(e),o=Math.cos(-e),s=Math.sin(-e),c=r*o+i*s,a=r*-s+i*o,u=i*o+-r*s,h=i*-s+-r*o;return[c,a,0,u,h,0,0,0,1,n[0]+c*-n[0]+-n[1]*u,n[1]+a*-n[0]+-n[1]*h,0]};var Pt=Object.freeze({__proto__:null,identity3x3:ct,identity3x4:at,isIdentity3x4:ut,multiplyMatrix3Vector3:ht,multiplyMatrix3Line3:lt,multiplyMatrices3:ft,determinant3:pt,invertMatrix3:mt,makeMatrix3Translate:gt,makeMatrix3RotateX:yt,makeMatrix3RotateY:vt,makeMatrix3RotateZ:Mt,makeMatrix3Rotate:xt,makeMatrix3Scale:bt,makeMatrix3ReflectZ:_t});const Ot=(t,n)=>({vector:t||[],origin:n||[]}),At=function(){if(arguments[0]instanceof u.vector)return arguments[0];let t=c(arguments);return t.length>0&&"object"==typeof t[0]&&null!==t[0]&&!Number.isNaN(t[0].x)&&(t=["x","y","z"].map((n=>t[0][n])).filter(v)),t.filter((t=>"number"==typeof t))},jt=function(){return s(arguments).map((t=>At(t)))},kt=function(){if(arguments[0]instanceof u.segment)return arguments[0];const t=s(arguments);return 4===t.length?[[t[0],t[1]],[t[2],t[3]]]:t.map((t=>At(t)))},wt=function(){const t=s(arguments);return 0===t.length?Ot([],[]):t[0]instanceof u.line||t[0]instanceof u.ray||t[0]instanceof u.segment?t[0]:t[0].constructor===Object&&void 0!==t[0].vector?Ot(t[0].vector||[],t[0].origin||[]):"number"==typeof t[0]?Ot(At(t)):Ot(...t.map((t=>At(t))))},$t=wt,St=(t=0,n=0,e=0,r=0)=>({x:t,y:n,width:e,height:r}),zt=function(){if(arguments[0]instanceof u.rect)return arguments[0];const t=c(arguments);if(t.length>0&&"object"==typeof t[0]&&null!==t[0]&&!Number.isNaN(t[0].width))return St(...["x","y","width","height"].map((n=>t[0][n])).filter(v));const n=t.filter((t=>"number"==typeof t)),e=n.length<4?[,,...n]:n;return St(...e)},Ct=(t=1,...n)=>({radius:t,origin:[...n]}),It=function(){if(arguments[0]instanceof u.circle)return arguments[0];const t=jt(arguments),n=c(arguments).filter((t=>"number"==typeof t));if(2===arguments.length){if(1===t[1].length)return Ct(t[1][0],...t[0]);if(1===t[0].length)return Ct(t[0][0],...t[1]);if(t[0].length>1&&t[1].length>1)return Ct(tt(...t),...t[0])}else switch(n.length){case 0:return Ct(1,0,0,0);case 1:return Ct(n[0],0,0,0);default:return Ct(n.pop(),...n)}return Ct(1,0,0,0)},Lt=[[0,1,3,4,9,10],[0,1,2,3,4,5,6,7,8,9,10,11],[0,1,2,void 0,3,4,5,void 0,6,7,8,void 0,9,10,11]];[11,7,3].forEach((t=>delete Lt[2][t]));const Nt=t=>{let n;return n=t<8?0:t<13?1:2,Lt[n]},Et=function(){const t=c(arguments),n=[...at];return Nt(t.length).forEach(((e,r)=>{null!=t[r]&&(n[e]=t[r])})),n};var qt=Object.freeze({__proto__:null,getVector:At,getVectorOfVectors:jt,getSegment:kt,getLine:wt,getRay:$t,getRectParams:St,getRect:zt,getCircle:It,getMatrix3x4:Et});const Rt=({vector:t,origin:n})=>{const e=N(t),r=et(t),i=H(n,r)/e;return{normal:T(r,1/e),distance:i}},Gt=({normal:t,distance:n})=>({vector:rt(t),origin:T(t,n)});var Tt=Object.freeze({__proto__:null,rayLineToUniqueLine:Rt,uniqueLineToRayLine:Gt});const Vt=(t,n,e)=>{const r=n.map(((n,r)=>({o:n,i:r,d:e(t,n)})));let i,o=1/0;for(let t=0;t<r.length;t+=1)r[t].d<o&&(i=t,o=r[t].d);return i},Bt=(t,n=h)=>{const e=((t,n=_,e=h)=>{let r=[0];for(let i=1;i<t.length;i+=1)switch(n(t[i][0],t[r[0]][0],e)){case 0:r.push(i);break;case 1:r=[i]}return r})(t,_,n);let r=0;for(let n=1;n<e.length;n+=1)t[e[n]][1]<t[e[r]][1]&&(r=n);return e[r]},Dt=(t,e,r,i,o=h)=>{e=n(t.length,e),r=n(t.length,r);const s=q(t),c=F(r,e),a=i(H(t,c)/s,o);return B(e,T(t,a))},Ft=(t,n)=>{const e=t.map(((t,n,e)=>F(e[(n+1)%e.length],t)));return t.map(((t,r)=>Dt(e[r],t,n,I))).map(((t,e)=>({point:t,i:e,distance:Q(t,n)}))).sort(((t,n)=>t.distance-n.distance)).shift()},Zt=(t,n,e)=>B(n,T(R(F(e,n)),t));var Ht=Object.freeze({__proto__:null,smallestComparisonSearch:Vt,minimum2DPointIndex:Bt,nearestPoint2:(t,n)=>{const e=Vt(t,n,tt);return void 0===e?void 0:n[e]},nearestPoint:(t,n)=>{const e=Vt(t,n,Q);return void 0===e?void 0:n[e]},nearestPointOnLine:Dt,nearestPointOnPolygon:Ft,nearestPointOnCircle:Zt});const Ut=(t,n=h)=>{const e=[[0]];let r=0;for(let i=1;i<t.length;i+=1)b(t[i],t[i-1],n)?e[r].push(i):(r=e.length,e.push([i]));return e},Xt=(t=[],n=h)=>{const e=Bt(t,n),r=t.map((n=>Z(n,t[e]))).map((t=>G(t))).map((t=>U([0,1],t))),i=r.map(((t,n)=>({a:t,i:n}))).sort(((t,n)=>t.a-n.a)).map((t=>t.i)).filter((t=>t!==e));return[[e]].concat(Ut(i.map((t=>r[t])),n).map((t=>t.map((t=>i[t])))).map((n=>1===n.length?n:n.map((n=>({i:n,len:tt(t[n],t[e])}))).sort(((t,n)=>t.len-n.len)).map((t=>t.i)))))};var Yt=Object.freeze({__proto__:null,sortPointsAlongVector2:(t,n)=>t.map((t=>({point:t,d:t[0]*n[0]+t[1]*n[1]}))).sort(((t,n)=>t.d-n.d)).map((t=>t.point)),clusterIndicesOfSortedNumbers:Ut,radialSortPointIndices:Xt});const Wt=[1,0,0,1],Jt=Wt.concat(0,0),Kt=t=>t[0]*t[3]-t[1]*t[2],Qt=(t,n=[0,0])=>{const e=Math.cos(t),r=Math.sin(t);return[e,r,-r,e,n[0],n[1]]};var tn=Object.freeze({__proto__:null,identity2x2:Wt,identity2x3:Jt,multiplyMatrix2Vector2:(t,n)=>[t[0]*n[0]+t[2]*n[1]+t[4],t[1]*n[0]+t[3]*n[1]+t[5]],multiplyMatrix2Line2:(t,n,e)=>({vector:[t[0]*n[0]+t[2]*n[1],t[1]*n[0]+t[3]*n[1]],origin:[t[0]*e[0]+t[2]*e[1]+t[4],t[1]*e[0]+t[3]*e[1]+t[5]]}),multiplyMatrices2:(t,n)=>[t[0]*n[0]+t[2]*n[1],t[1]*n[0]+t[3]*n[1],t[0]*n[2]+t[2]*n[3],t[1]*n[2]+t[3]*n[3],t[0]*n[4]+t[2]*n[5]+t[4],t[1]*n[4]+t[3]*n[5]+t[5]],determinant2:Kt,invertMatrix2:t=>{const n=Kt(t);if(!(Math.abs(n)<1e-6||Number.isNaN(n))&&Number.isFinite(t[4])&&Number.isFinite(t[5]))return[t[3]/n,-t[1]/n,-t[2]/n,t[0]/n,(t[2]*t[5]-t[3]*t[4])/n,(t[1]*t[4]-t[0]*t[5])/n]},makeMatrix2Translate:(t=0,n=0)=>Wt.concat(t,n),makeMatrix2Scale:(t,n,e=[0,0])=>[t,0,0,n,t*-e[0]+e[0],n*-e[1]+e[1]],makeMatrix2Rotate:Qt,makeMatrix2Reflect:(t,n=[0,0])=>{const e=Math.atan2(t[1],t[0]),r=Math.cos(e),i=Math.sin(e),o=Math.cos(-e),s=Math.sin(-e),c=r*o+i*s,a=r*-s+i*o,u=i*o+-r*s,h=i*-s+-r*o;return[c,a,u,h,n[0]+c*-n[0]+-n[1]*u,n[1]+a*-n[0]+-n[1]*h]}});const nn=(t,n,e=A,r=h)=>t.map(((t,n,e)=>[t,e[(n+1)%e.length]])).map((t=>J(R(F(t[1],t[0])),F(n,t[0])))).map((t=>e(t,r))).map(((t,n,e)=>t===e[0])).reduce(((t,n)=>t&&n),!0),en=(t,n,e)=>B(n,T(t,e)),rn=(t,n,e,r,i)=>t.map(((t,n,e)=>[F(e[(n+1)%e.length],t),t])).map((t=>((t,n,e,r,i=S,o=h)=>{const s=J(R(t),R(e));if(Math.abs(s)<o)return;const c=J(t,e),a=-c,u=F(r,n),l=nt(u),f=J(u,e)/c;return i(J(l,t)/a,o/N(e))?f:void 0})(n,e,t[0],t[1],r,i))).filter(v).sort(((t,n)=>t-n)),on=(t,n,e,r=O,i=j,o=h)=>{const s=rn(t,n,e,S,o);if(s.length<2)return;const c=((t,n,e)=>{let r=0,i=t.length-1;for(;r<i&&!n(t[r+1]-t[r],e);)r+=1;for(;i>r&&!n(t[i]-t[i-1],e);)i-=1;if(!(r>=i))return[t[r],t[i]]})(s,r,2*o/N(n));if(void 0===c)return;const a=c.map((t=>i(t)?t:t<.5?0:1));if(Math.abs(a[0]-a[1])<2*o/N(n))return;const u=en(n,e,(a[0]+a[1])/2);return nn(t,u,r,o)?a.map((t=>en(n,e,t))):void 0},sn=(t,n)=>{for(;t<0;)t+=p;for(;n<0;)n+=p;for(;t>p;)t-=p;for(;n>p;)n-=p;const e=t-n;return e>=0?e:p-(n-t)},cn=(t,n)=>{for(;t<0;)t+=p;for(;n<0;)n+=p;for(;t>p;)t-=p;for(;n>p;)n-=p;const e=n-t;return e>=0?e:p-(t-n)},an=(t,n)=>{const e=n[0]*t[0]+n[1]*t[1],r=n[0]*t[1]-n[1]*t[0];let i=Math.atan2(r,e);return i<0&&(i+=p),i},un=(t,n)=>{const e=t[0]*n[0]+t[1]*n[1],r=t[0]*n[1]-t[1]*n[0];let i=Math.atan2(r,e);return i<0&&(i+=p),i},hn=(t,n)=>x(M(t)-an(t,n)/2),ln=(t,n)=>x(M(t)+un(t,n)/2),fn=(t,n,e)=>{const r=sn(n,e)/t;return Array.from(Array(t-1)).map(((t,e)=>n+r*(e+1)))},pn=(t,n,e)=>{const r=cn(n,e)/t;return Array.from(Array(t-1)).map(((t,e)=>n+r*(e+1)))},mn=(t,n,e)=>{const r=Math.atan2(n[1],n[0]),i=Math.atan2(e[1],e[0]);return fn(t,r,i).map(x)},gn=(t,n,e)=>{const r=Math.atan2(n[1],n[0]),i=Math.atan2(e[1],e[0]);return pn(t,r,i).map(x)},dn=(t,n,e,r,i=h)=>{const o=J(t,e),s=H(t,e),c=o>-i?[ln(t,e)]:[hn(t,e)];c[1]=o>-i?et(c[0]):rt(c[0]);const a=((r[0]-n[0])*e[1]-e[0]*(r[1]-n[1]))/o,u=[t,e].map((t=>R(t))),l=Math.abs(J(...u))<i,f=l?X(n,r):[n[0]+t[0]*a,n[1]+t[1]*a],p=c.map((t=>({vector:t,origin:f})));return l&&delete p[s>-i?1:0],p},yn=function(){const t=Array.from(arguments).flat(),n=t.map(((t,n)=>n)).sort(((n,e)=>t[n]-t[e]));return n.slice(n.indexOf(0),n.length).concat(n.slice(0,n.indexOf(0)))},vn=function(){const t=Array.from(arguments).flat(),n=yn(t).map((n=>t[n]));return n.map(((t,n,e)=>[t,e[(n+1)%e.length]])).map((t=>cn(t[0],t[1])))},Mn=(t,n,e,r=h)=>{const i=G(Z(n,t)),o=G(Z(e,t)),s=J(i,o);return b(s,0,r)?b(tt(t,n)+tt(n,e),tt(t,e))?0:void 0:Math.sign(s)};var xn=Object.freeze({__proto__:null,isCounterClockwiseBetween:(t,n,e)=>{for(;e<n;)e+=p;for(;t>n;)t-=p;for(;t<n;)t+=p;return t<e},clockwiseAngleRadians:sn,counterClockwiseAngleRadians:cn,clockwiseAngle2:an,counterClockwiseAngle2:un,clockwiseBisect2:hn,counterClockwiseBisect2:ln,clockwiseSubsectRadians:fn,counterClockwiseSubsectRadians:pn,clockwiseSubsect2:mn,counterClockwiseSubsect2:gn,bisectLines2:dn,counterClockwiseOrderRadians:yn,counterClockwiseOrder2:function(){return yn(s(arguments).map(M))},counterClockwiseSectorsRadians:vn,counterClockwiseSectors2:function(){return vn(jt(arguments).map(M))},threePointTurnDirection:Mn});const bn=(t=[],n=!1,e=h)=>{if(t.length<2)return[];const r=Xt(t,e).map((t=>1===t.length?t:(t=>t.concat(t.slice(0,-1).reverse()))(t))).flat();r.push(r[0]);const i=[r[0]];let o=1;const s={"-1":()=>i.pop(),1:t=>{i.push(t),o+=1},undefined:()=>{o+=1}};for(s[0]=n?s[1]:s[-1];o<r.length;){if(i.length<2){i.push(r[o]),o+=1;continue}const n=i[i.length-2],c=i[i.length-1],a=r[o];s[Mn(...[n,c,a].map((n=>t[n])),e)](a)}return i.pop(),i},_n=(t=[],n=!1,e=h)=>bn(t,n,e).map((n=>t[n]));var Pn=Object.freeze({__proto__:null,convexHullIndices:bn,convexHull:_n});const On=(t,n,e,r,i=j,o=j,s=h)=>{const c=J(R(t),R(e));if(Math.abs(c)<s)return;const a=J(t,e),u=-a,l=[r[0]-n[0],r[1]-n[1]],f=[-l[0],-l[1]],p=J(l,e)/a,m=J(f,t)/u;return i(p,s/N(t))&&o(m,s/N(e))?B(n,T(t,p)):void 0};var An=Object.freeze({__proto__:null,pleat:(t,n,e)=>{const r=wt(n),i=wt(e);return ot(r.vector,i.vector)?((t,n,e)=>{const r=Array.from(Array(t-1)).map(((n,e)=>(e+1)/t)).map((t=>W(n.origin,e.origin,t))),i=[...n.vector];return r.map((t=>({origin:t,vector:i})))})(t,r,i):((t,n,e)=>{const r=On(n.vector,n.origin,e.vector,e.origin);return(an(n.vector,e.vector)<un(n.vector,e.vector)?mn(t,n.vector,e.vector):gn(t,n.vector,e.vector)).map((t=>({origin:r,vector:t})))})(t,r,i)}});const jn=t=>Array.from(Array(Math.floor(t))).map(((n,e)=>p*(e/t))),kn=(t,n)=>t.map((t=>[n*Math.cos(t),n*Math.sin(t)])).map((t=>t.map((t=>i(t,14))))),wn=(t=3,n=1)=>kn(jn(t),n),$n=(t=3,n=1)=>{const e=Math.PI/t,r=jn(t).map((t=>t+e));return kn(r,n)},Sn=function(t,n,e){const r=n[0]-t[0],i=n[1]-t[1],o=e[0]-t[0],s=e[1]-t[1],c=r*(t[0]+n[0])+i*(t[1]+n[1]),a=o*(t[0]+e[0])+s*(t[1]+e[1]),u=2*(r*(e[1]-n[1])-i*(e[0]-n[0]));if(Math.abs(u)<h){const r=Math.min(t[0],n[0],e[0]),i=Math.min(t[1],n[1],e[1]),o=.5*(Math.max(t[0],n[0],e[0])-r),s=.5*(Math.max(t[1],n[1],e[1])-i);return{origin:[r+o,i+s],radius:Math.sqrt(o*o+s*s)}}const l=[(s*c-i*a)/u,(r*a-o*c)/u],f=l[0]-t[0],p=l[1]-t[1];return{origin:l,radius:Math.sqrt(f*f+p*p)}},zn=t=>.5*t.map(((t,n,e)=>{const r=e[(n+1)%e.length];return t[0]*r[1]-r[0]*t[1]})).reduce(y,0),Cn=t=>{const n=1/(6*zn(t));return t.map(((t,n,e)=>{const r=e[(n+1)%e.length],i=t[0]*r[1]-r[0]*t[1];return[(t[0]+r[0])*i,(t[1]+r[1])*i]})).reduce(((t,n)=>[t[0]+n[0],t[1]+n[1]]),[0,0]).map((t=>t*n))},In=(t,n=0)=>{const e=Array(t[0].length).fill(1/0),r=Array(t[0].length).fill(-1/0);t.forEach((t=>t.forEach(((t,i)=>{t<e[i]&&(e[i]=t-n),t>r[i]&&(r[i]=t+n)}))));const i=r.map(((t,n)=>t-e[n]));return{min:e,max:r,span:i}};var Ln=Object.freeze({__proto__:null,makePolygonCircumradius:wn,makePolygonCircumradiusSide:$n,makePolygonInradius:(t=3,n=1)=>wn(t,n/Math.cos(Math.PI/t)),makePolygonInradiusSide:(t=3,n=1)=>$n(t,n/Math.cos(Math.PI/t)),makePolygonSideLength:(t=3,n=1)=>wn(t,n/2/Math.sin(Math.PI/t)),makePolygonSideLengthSide:(t=3,n=1)=>$n(t,n/2/Math.sin(Math.PI/t)),makePolygonNonCollinear:(t,n=h)=>{const e=t.map(((t,n,e)=>[t,e[(n+1)%e.length]])).map((t=>F(t[1],t[0]))).map(((t,n,e)=>[t,e[(n+e.length-1)%e.length]])).map((t=>!ot(t[1],t[0],n)));return t.filter(((t,n)=>e[n]))},circumcircle:Sn,signedArea:zn,centroid:Cn,boundingBox:In});const Nn=(t,n,e,r=k,i=h)=>{const o=F(e,n),s=q(t),c=Math.sqrt(s);if(c<i)return!1;const a=J(o,t.map((t=>t/c))),u=H(o,t)/s;return Math.abs(a)<i&&r(u,i/c)},En=(t,n,e)=>{const r=t.map(((t,r)=>({point:Nn(n,e,t,j)?t:null,at_index:r}))).filter((t=>null!=t.point)),i=t.map(((t,r,i)=>({point:On(n,e,F(t,i[(r+1)%i.length]),i[(r+1)%i.length],k,z),at_index:r}))).filter((t=>null!=t.point));if(2===i.length){const n=i.slice().sort(((t,n)=>t.at_index-n.at_index)),e=t.slice(n[1].at_index+1).concat(t.slice(0,n[0].at_index+1));e.push(n[0].point),e.push(n[1].point);const r=t.slice(n[0].at_index+1,n[1].at_index+1);return r.push(n[1].point),r.push(n[0].point),[e,r]}if(1===i.length&&1===r.length){r[0].type="v",i[0].type="e";const n=r.concat(i).sort(((t,n)=>t.at_index-n.at_index)),e=t.slice(n[1].at_index+1).concat(t.slice(0,n[0].at_index+1));"e"===n[0].type&&e.push(n[0].point),e.push(n[1].point);const o=t.slice(n[0].at_index+1,n[1].at_index+1);return"e"===n[1].type&&o.push(n[1].point),o.push(n[0].point),[e,o]}if(2===r.length){const n=r.slice().sort(((t,n)=>t.at_index-n.at_index));return[t.slice(n[1].at_index).concat(t.slice(0,n[0].at_index+1)),t.slice(n[0].at_index,n[1].at_index+1)]}return[t.slice()]},qn=(t,n,e)=>{const r=t.map(((t,n)=>({vector:e[n],origin:t}))).map(((t,n,e)=>On(t.vector,t.origin,e[(n+1)%e.length].vector,e[(n+1)%e.length].origin,$,$))),i=n.map(((t,n)=>Dt(t.vector,t.origin,r[n],(t=>t))));if(3===t.length)return t.map((t=>({type:"skeleton",points:[t,r[0]]}))).concat([{type:"perpendicular",points:[i[0],r[0]]}]);const o=r.map(((t,n)=>Q(t,i[n])));let s=0;o.forEach(((t,n)=>{t<o[s]&&(s=n)}));const c=[{type:"skeleton",points:[t[s],r[s]]},{type:"skeleton",points:[t[(s+1)%t.length],r[s]]},{type:"perpendicular",points:[i[s],r[s]]}],a=hn(nt(n[(s+n.length-1)%n.length].vector),n[(s+1)%n.length].vector),u=s===t.length-1;return t.splice(s,2,r[s]),n.splice(s,1),e.splice(s,2,a),u&&(t.splice(0,1),e.splice(0,1),n.push(n.shift())),c.concat(qn(t,n,e))},Rn=t=>{const n=t.map(((t,n,e)=>[t,e[(n+1)%e.length]])).map((t=>({vector:F(t[1],t[0]),origin:t[0]}))),e=t.map(((t,n,e)=>[(n-1+e.length)%e.length,n,(n+1)%e.length].map((t=>e[t])))).map((t=>[F(t[0],t[1]),F(t[2],t[1])])).map((t=>hn(...t)));return qn([...t],n,e)};var Gn=Object.freeze({__proto__:null,collinearBetween:(t,n,e,r=!1,i=h)=>{if([t,e].map((t=>P(n,t))).reduce(((t,n)=>t||n),!1))return r;const o=[[t,n],[n,e]].map((t=>F(t[1],t[0]))).map((t=>R(t)));return b(1,H(...o),i)}});const Tn=(t,n,e)=>{const r=n[0]-t[0],i=n[1]-t[1],o=r*Math.cos(e)+i*Math.sin(e),s=i*Math.cos(e)-r*Math.sin(e);return[t[0]+o,t[1]+s]},Vn=(t,n,e,r,i=h)=>{const o=t<e?t:e,s=t<e?e:t,c=t<e?n:r,a=t<e?r:n,u=[c[0]-a[0],c[1]-a[1]],l=Math.sqrt(u[0]**2+u[1]**2);if(l<i)return;const f=u.map(((t,n)=>t/l*s+a[n]));if(Math.abs(s+o-l)<i||Math.abs(s-(o+l))<i)return[f];if(l+o<s||s+o<l)return;const p=(m=(o*o-l*l-s*s)/(-2*l*s))>=1?0:m<=-1?Math.PI:Math.acos(m);var m;return[Tn(a,f,+p),Tn(a,f,-p)]},Bn=(t,n,e,r,i=j,o=h)=>{const s=e[0]**2+e[1]**2,c=Math.sqrt(s),a=0===c?e:e.map((t=>t/c)),u=et(a),l=F(r,n),f=J(l,a);if(Math.abs(f)>t+o)return;const p=Math.sqrt(t**2-f**2),m=(t,e)=>n[e]-u[e]*f+a[e]*t,g=Math.abs(t-Math.abs(f))<o?[p].map((t=>[t,t].map(m))):[-p,p].map((t=>[t,t].map(m))),d=g.map((t=>t.map(((t,n)=>t-r[n])))).map((t=>t[0]*e[0]+e[1]*t[1])).map((t=>t/s));return g.filter(((t,n)=>i(d[n],o)))},Dn=t=>{for(let n=1;n<t.length;n+=1)if(!P(t[0],t[n]))return[t[0],t[n]]},Fn=(t,n,e,r=S,i=j,o=h)=>{const s=t.map(((t,n,e)=>[t,e[(n+1)%e.length]])).map((t=>On(F(t[1],t[0]),t[0],n,e,r,i,o))).filter((t=>void 0!==t));switch(s.length){case 0:return;case 1:return[s];default:return Dn(s)||[s[0]]}},Zn=(t,n,e,r=S,i=k,o=h)=>{const s=Fn(t,n,e,r,i,o);let c;switch(i){case $:c=w;break;case z:c=S;break;default:return s}const a=Fn(t,n,e,S,c,o);if(void 0===a)return;const u=Dn(a);if(void 0===u)switch(i){case $:return nn(t,e,A,o)?a:void 0;case z:return nn(t,B(e,n),A,o)||nn(t,e,A,o)?a:void 0;case k:default:return}return nn(t,X(...u),A,o)?u:s},Hn={polygon:t=>[t],rect:t=>[t],circle:t=>[t.radius,t.origin],line:t=>[t.vector,t.origin],ray:t=>[t.vector,t.origin],segment:t=>[t.vector,t.origin]},Un={polygon:{line:(t,n,e,r,i)=>Zn(...t,...n,S,r,i),ray:(t,n,e,r,i)=>Zn(...t,...n,S,r,i),segment:(t,n,e,r,i)=>Zn(...t,...n,S,r,i)},circle:{circle:(t,n,e,r,i)=>Vn(...t,...n,i),line:(t,n,e,r,i)=>Bn(...t,...n,r,i),ray:(t,n,e,r,i)=>Bn(...t,...n,r,i),segment:(t,n,e,r,i)=>Bn(...t,...n,r,i)},line:{polygon:(t,n,e,r,i)=>Zn(...n,...t,S,e,i),circle:(t,n,e,r,i)=>Bn(...n,...t,e,i),line:(t,n,e,r,i)=>On(...t,...n,e,r,i),ray:(t,n,e,r,i)=>On(...t,...n,e,r,i),segment:(t,n,e,r,i)=>On(...t,...n,e,r,i)},ray:{polygon:(t,n,e,r,i)=>Zn(...n,...t,S,e,i),circle:(t,n,e,r,i)=>Bn(...n,...t,e,i),line:(t,n,e,r,i)=>On(...n,...t,r,e,i),ray:(t,n,e,r,i)=>On(...t,...n,e,r,i),segment:(t,n,e,r,i)=>On(...t,...n,e,r,i)},segment:{polygon:(t,n,e,r,i)=>Zn(...n,...t,S,e,i),circle:(t,n,e,r,i)=>Bn(...n,...t,e,i),line:(t,n,e,r,i)=>On(...n,...t,r,e,i),ray:(t,n,e,r,i)=>On(...n,...t,r,e,i),segment:(t,n,e,r,i)=>On(...t,...n,e,r,i)}},Xn={polygon:"polygon",rect:"polygon",circle:"circle",line:"line",ray:"ray",segment:"segment"},Yn={polygon:A,rect:A,circle:A,line:k,ray:$,segment:z},Wn=function(n,e,r){const i=t(n),o=t(e),s=Xn[i],c=Xn[o],a=Hn[i](n),u=Hn[o](e),h=n.domain_function||Yn[i],l=e.domain_function||Yn[o];return Un[s][c](a,u,h,l,r)},Jn=(t,n,e=h)=>{for(let r=0;r<2;r+=1){const i=0===r?t:n,o=0===r?n:t;for(let t=0;t<i.length;t+=1){const n=i[t],r=et(F(i[(t+1)%i.length],i[t])),s=o.map((t=>F(t,n))).map((t=>H(r,t))),c=i[(t+2)%i.length],a=H(r,F(c,n))>0;if(s.map((t=>a?t<e:t>-e)).reduce(((t,n)=>t&&n),!0))return!1}}return!0},Kn=(t,n,e,r=A,i=h)=>r(t-tt(n,e),i),Qn=(t,n,e,r,i=k,o=k,s=h)=>{const c=J(t,e),a=-c,u=[r[0]-n[0],r[1]-n[1]];if(Math.abs(c)<s){if(Math.abs(J(u,t))>s)return!1;const n=u,r=B(n,e),i=H(t,t),o=H(n,t)/i,c=H(r,t)/i,a=(o<c?c:o)<s;return!((o<c?o:c)>1-s)&&!a}const l=[-u[0],-u[1]],f=J(u,e)/c,p=J(l,t)/a;return i(f,s/N(t))&&o(p,s/N(e))},te={polygon:t=>[t],rect:t=>[t],circle:t=>[t.radius,t.origin],line:t=>[t.vector,t.origin],ray:t=>[t.vector,t.origin],segment:t=>[t.vector,t.origin],vector:t=>[t]},ne={polygon:{polygon:(t,n,e,r,i)=>Jn(...t,...n,i),vector:(t,n,e,r,i)=>nn(...t,...n,e,i)},circle:{vector:(t,n,e,r,i)=>Kn(...t,...n,A,i)},line:{line:(t,n,e,r,i)=>Qn(...t,...n,e,r,i),ray:(t,n,e,r,i)=>Qn(...t,...n,e,r,i),segment:(t,n,e,r,i)=>Qn(...t,...n,e,r,i),vector:(t,n,e,r,i)=>Nn(...t,...n,e,i)},ray:{line:(t,n,e,r,i)=>Qn(...n,...t,r,e,i),ray:(t,n,e,r,i)=>Qn(...t,...n,e,r,i),segment:(t,n,e,r,i)=>Qn(...t,...n,e,r,i),vector:(t,n,e,r,i)=>Nn(...t,...n,e,i)},segment:{line:(t,n,e,r,i)=>Qn(...n,...t,r,e,i),ray:(t,n,e,r,i)=>Qn(...n,...t,r,e,i),segment:(t,n,e,r,i)=>Qn(...t,...n,e,r,i),vector:(t,n,e,r,i)=>Nn(...t,...n,e,i)},vector:{polygon:(t,n,e,r,i)=>nn(...n,...t,r,i),circle:(t,n,e,r,i)=>Kn(...n,...t,A,i),line:(t,n,e,r,i)=>Nn(...n,...t,r,i),ray:(t,n,e,r,i)=>Nn(...n,...t,r,i),segment:(t,n,e,r,i)=>Nn(...n,...t,r,i),vector:(t,n,e,r,i)=>P(...t,...n,i)}},ee={polygon:"polygon",rect:"polygon",circle:"circle",line:"line",ray:"ray",segment:"segment",vector:"vector"},re={polygon:A,rect:A,circle:A,line:k,ray:$,segment:z,vector:k},ie=function(n,e,r){const i=t(n),o=t(e),s=ee[i],c=ee[o],a=te[i](n),u=te[o](e),h=n.domain_function||re[i],l=e.domain_function||re[o];return ne[s][c](a,u,h,l,r)},oe={preserve:{magnitude:function(){return N(this)},isEquivalent:function(){return P(this,At(arguments))},isParallel:function(){return ot(...e(this,At(arguments)))},isCollinear:function(t){return ie(this,t)},dot:function(){return H(...e(this,At(arguments)))},distanceTo:function(){return Q(...e(this,At(arguments)))},overlap:function(t){return ie(this,t)}},vector:{copy:function(){return[...this]},normalize:function(){return R(this)},scale:function(){return T(this,arguments[0])},flip:function(){return nt(this)},rotate90:function(){return et(this)},rotate270:function(){return rt(this)},cross:function(){return K(n(3,this),n(3,At(arguments)))},transform:function(){return ht(Et(arguments),n(3,this))},add:function(){return B(this,n(this.length,At(arguments)))},subtract:function(){return F(this,n(this.length,At(arguments)))},rotateZ:function(t,e){return ht(Et(Qt(t,e)),n(3,this))},lerp:function(t,e){return W(this,n(this.length,At(t)),e)},midpoint:function(){return X(...e(this,At(arguments)))},bisect:function(){return ln(this,At(arguments))}}},se={};Object.keys(oe.preserve).forEach((t=>{se[t]=oe.preserve[t]})),Object.keys(oe.vector).forEach((t=>{se[t]=function(){return u.vector(...oe.vector[t].apply(this,arguments))}}));const ce={fromAngle:function(t){return u.vector(Math.cos(t),Math.sin(t))},fromAngleDegrees:function(t){return u.vector.fromAngle(t*f)}};var ae={vector:{P:Array.prototype,A:function(){this.push(...At(arguments))},G:{x:function(){return this[0]},y:function(){return this[1]},z:function(){return this[2]}},M:se,S:ce}},ue={fromPoints:function(){const t=jt(arguments);return this.constructor({vector:F(t[1],t[0]),origin:t[0]})},fromAngle:function(){const t=arguments[0]||0;return this.constructor({vector:[Math.cos(t),Math.sin(t)],origin:[0,0]})},perpendicularBisector:function(){const t=jt(arguments);return this.constructor({vector:et(F(t[1],t[0])),origin:Y(t[0],t[1])})}};const he={isParallel:function(){const t=e(this.vector,wt(arguments).vector);return ot(...t)},isCollinear:function(){const t=wt(arguments);return Nn(this.vector,this.origin,t.origin)&&ot(...e(this.vector,t.vector))},isDegenerate:function(t=h){return it(this.vector,t)},reflectionMatrix:function(){return u.matrix(_t(this.vector,this.origin))},nearestPoint:function(){const t=At(arguments);return u.vector(Dt(this.vector,this.origin,t,this.clip_function))},transform:function(){const t=this.dimension,e=lt(Et(arguments),n(3,this.vector),n(3,this.origin));return this.constructor(n(t,e.vector),n(t,e.origin))},translate:function(){const t=B(...e(this.origin,At(arguments)));return this.constructor(this.vector,t)},intersect:function(){return Wn(this,...arguments)},overlap:function(){return ie(this,...arguments)},bisect:function(t,n){const e=wt(t);return dn(this.vector,this.origin,e.vector,e.origin,n).map((t=>this.constructor(t)))}};var le={line:{P:Object.prototype,A:function(){const t=wt(...arguments);this.vector=u.vector(t.vector),this.origin=u.vector(n(this.vector.length,t.origin));const e=Rt({vector:this.vector,origin:this.origin});this.normal=e.normal,this.distance=e.distance,Object.defineProperty(this,"domain_function",{writable:!0,value:j})},G:{dimension:function(){return[this.vector,this.origin].map((t=>t.length)).reduce(((t,n)=>Math.max(t,n)),0)}},M:Object.assign({},he,{inclusive:function(){return this.domain_function=j,this},exclusive:function(){return this.domain_function=k,this},clip_function:t=>t,svgPath:function(t=2e4){const n=B(this.origin,T(this.vector,-t/2)),e=T(this.vector,t);return`M${n[0]} ${n[1]}l${e[0]} ${e[1]}`}}),S:Object.assign({fromNormalDistance:function(){return this.constructor(Gt(arguments[0]))}},ue)}},fe={ray:{P:Object.prototype,A:function(){const t=wt(...arguments);this.vector=u.vector(t.vector),this.origin=u.vector(n(this.vector.length,t.origin)),Object.defineProperty(this,"domain_function",{writable:!0,value:w})},G:{dimension:function(){return[this.vector,this.origin].map((t=>t.length)).reduce(((t,n)=>Math.max(t,n)),0)}},M:Object.assign({},he,{inclusive:function(){return this.domain_function=w,this},exclusive:function(){return this.domain_function=$,this},flip:function(){return u.ray(nt(this.vector),this.origin)},scale:function(t){return u.ray(this.vector.scale(t),this.origin)},normalize:function(){return u.ray(this.vector.normalize(),this.origin)},clip_function:C,svgPath:function(t=1e4){const n=this.vector.scale(t);return`M${this.origin[0]} ${this.origin[1]}l${n[0]} ${n[1]}`}}),S:ue}},pe={segment:{P:Array.prototype,A:function(){const t=kt(...arguments);this.push(...[t[0],t[1]].map((t=>u.vector(t)))),this.vector=u.vector(F(this[1],this[0])),this.origin=this[0],Object.defineProperty(this,"domain_function",{writable:!0,value:S})},G:{points:function(){return this},magnitude:function(){return N(this.vector)},dimension:function(){return[this.vector,this.origin].map((t=>t.length)).reduce(((t,n)=>Math.max(t,n)),0)}},M:Object.assign({},he,{inclusive:function(){return this.domain_function=S,this},exclusive:function(){return this.domain_function=z,this},clip_function:I,transform:function(...t){const e=this.points[0].length,r=Et(t),i=this.points.map((t=>n(3,t))).map((t=>ht(r,t))).map((t=>n(e,t)));return u.segment(i)},translate:function(){const t=At(arguments),n=this.points.map((n=>B(...e(n,t))));return u.segment(n)},midpoint:function(){return u.vector(Y(this.points[0],this.points[1]))},svgPath:function(){const t=this.points.map((t=>`${t[0]} ${t[1]}`));return["M","L"].map(((n,e)=>`${n}${t[e]}`)).join("")}}),S:{fromPoints:function(){return this.constructor(...arguments)}}}};const me=function(t,n,e,r,i,o){const s=Math.cos(i),c=Math.sin(i),a=Math.cos(o),u=Math.sin(o);return[t+s*e*a+-c*r*u,n+c*e*a+s*r*u]},ge=function(t,n,e,r,i,o,s){let c=o;if(c<0&&!Number.isNaN(c))for(;c<0;)c+=2*Math.PI;const a=s>2*Math.PI?2*Math.PI:s,u=me(t,n,e,r,i,c),h=me(t,n,e,r,i,c+a/2),l=me(t,n,e,r,i,c+a),f=a/2>Math.PI?1:0,p=a/2>0?1:0;return{x1:u[0],y1:u[1],x2:h[0],y2:h[1],x3:l[0],y3:l[1],fa:f,fs:p}},de=t=>i(t,4),ye=(t,n,e,r,i,o,s)=>`A${de(t)} ${de(n)} ${de(e)} ${de(r)} ${de(i)} ${de(o)} ${de(s)}`;var ve={circle:{A:function(){const t=It(...arguments);this.radius=t.radius,this.origin=u.vector(...t.origin)},G:{x:function(){return this.origin[0]},y:function(){return this.origin[1]},z:function(){return this.origin[2]}},M:{nearestPoint:function(){return u.vector(Zt(this.radius,this.origin,At(arguments)))},intersect:function(t){return Wn(this,t)},overlap:function(t){return ie(this,t)},svgPath:function(t=0,n=2*Math.PI){const e=ge(this.origin[0],this.origin[1],this.radius,this.radius,0,t,n),r=ye(this.radius,this.radius,0,e.fa,e.fs,e.x2,e.y2),i=ye(this.radius,this.radius,0,e.fa,e.fs,e.x3,e.y3);return`M${e.x1} ${e.y1}${r}${i}`},points:function(t=128){return Array.from(Array(t)).map(((n,e)=>2*Math.PI/t*e)).map((t=>[this.origin[0]+this.radius*Math.cos(t),this.origin[1]+this.radius*Math.sin(t)]))},polygon:function(){return u.polygon(this.points(arguments[0]))},segments:function(){const t=this.points(arguments[0]);return t.map(((n,e)=>{const r=(e+1)%t.length;return[n,t[r]]}))}},S:{fromPoints:function(){if(3===arguments.length){const t=Sn(...arguments);return this.constructor(t.radius,t.origin)}return this.constructor(...arguments)},fromThreePoints:function(){const t=Sn(...arguments);return this.constructor(t.radius,t.origin)}}}};const Me=function(t,n,e,r){const i=n>e,o=i?n**2-e**2:e**2-n**2,s=Math.sqrt(o),c=i?Math.cos(r):Math.sin(r),a=i?Math.sin(r):Math.cos(r);return[u.vector(t[0]+s*c,t[1]+s*a),u.vector(t[0]-s*c,t[1]-s*a)]};var xe={ellipse:{A:function(){const t=c(arguments).filter((t=>!Number.isNaN(t))),e=n(5,t);this.rx=e[0],this.ry=e[1],this.origin=u.vector(e[2],e[3]),this.spin=e[4],this.foci=Me(this.origin,this.rx,this.ry,this.spin)},G:{x:function(){return this.origin[0]},y:function(){return this.origin[1]}},M:{svgPath:function(t=0,n=2*Math.PI){const e=ge(this.origin[0],this.origin[1],this.rx,this.ry,this.spin,t,n),r=ye(this.rx,this.ry,this.spin/Math.PI*180,e.fa,e.fs,e.x2,e.y2),i=ye(this.rx,this.ry,this.spin/Math.PI*180,e.fa,e.fs,e.x3,e.y3);return`M${e.x1} ${e.y1}${r}${i}`},points:function(t=128){return Array.from(Array(t)).map(((n,e)=>2*Math.PI/t*e)).map((t=>me(this.origin.x,this.origin.y,this.rx,this.ry,this.spin,t)))},polygon:function(){return u.polygon(this.points(arguments[0]))},segments:function(){const t=this.points(arguments[0]);return t.map(((n,e)=>{const r=(e+1)%t.length;return[n,t[r]]}))}},S:{}}};const be={area:function(){return zn(this)},centroid:function(){return u.vector(Cn(this))},boundingBox:function(){return In(this)},straightSkeleton:function(){return Rn(this)},scale:function(t,n=Cn(this)){const e=this.map((t=>[0,1].map(((e,r)=>t[r]-n[r])))).map((e=>e.map(((r,i)=>n[i]+e[i]*t))));return this.constructor.fromPoints(e)},rotate:function(t,n=Cn(this)){const e=this.map((e=>{const r=[e[0]-n[0],e[1]-n[1]],i=Math.sqrt(r[0]**2+r[1]**2),o=Math.atan2(r[1],r[0]);return[n[0]+Math.cos(o+t)*i,n[1]+Math.sin(o+t)*i]}));return u.polygon(e)},translate:function(){const t=At(...arguments),n=this.map((n=>n.map(((n,e)=>n+t[e]))));return this.constructor.fromPoints(n)},transform:function(){const t=Et(...arguments),e=this.map((e=>ht(t,n(3,e))));return u.polygon(e)},nearest:function(){const t=At(...arguments),n=Ft(this,t);return void 0===n?void 0:Object.assign(n,{edge:this.sides[n.i]})},split:function(){const t=wt(...arguments),n=En;return n(this,t.vector,t.origin).map((t=>u.polygon(t)))},overlap:function(){return ie(this,...arguments)},intersect:function(){return Wn(this,...arguments)},clip:function(t,n){const e=t.domain_function?t.domain_function:j,r=on(this,t.vector,t.origin,this.domain_function,e,n);return r?u.segment(r):void 0},svgPath:function(){const t=Array(this.length).fill("L");return t[0]="M",`${this.map(((n,e)=>`${t[e]}${n[0]} ${n[1]}`)).join("")}z`}},_e=t=>[[t.x,t.y],[t.x+t.width,t.y],[t.x+t.width,t.y+t.height],[t.x,t.y+t.height]];var Pe={rect:{P:Array.prototype,A:function(){const t=zt(...arguments);this.width=t.width,this.height=t.height,this.origin=u.vector(t.x,t.y),this.push(..._e(this)),Object.defineProperty(this,"domain_function",{writable:!0,value:O})},G:{x:function(){return this.origin[0]},y:function(){return this.origin[1]},center:function(){return u.vector(this.origin[0]+this.width/2,this.origin[1]+this.height/2)}},M:Object.assign({},be,{inclusive:function(){return this.domain_function=O,this},exclusive:function(){return this.domain_function=A,this},area:function(){return this.width*this.height},segments:function(){return[[[(t=this).x,t.y],[t.x+t.width,t.y]],[[t.x+t.width,t.y],[t.x+t.width,t.y+t.height]],[[t.x+t.width,t.y+t.height],[t.x,t.y+t.height]],[[t.x,t.y+t.height],[t.x,t.y]]];var t},svgPath:function(){return`M${this.origin.join(" ")}h${this.width}v${this.height}h${-this.width}Z`}}),S:{fromPoints:function(){const t=In(jt(arguments));return u.rect(t.min[0],t.min[1],t.span[0],t.span[1])}}}},Oe={polygon:{P:Array.prototype,A:function(){this.push(...s(arguments)),this.sides=this.map(((t,n,e)=>[t,e[(n+1)%e.length]])),this.vectors=this.sides.map((t=>F(t[1],t[0]))),Object.defineProperty(this,"domain_function",{writable:!0,value:O})},G:{isConvex:function(){},points:function(){return this}},M:Object.assign({},be,{inclusive:function(){return this.domain_function=O,this},exclusive:function(){return this.domain_function=A,this},segments:function(){return this.sides}}),S:{fromPoints:function(){return this.constructor(...arguments)},regularPolygon:function(){return this.constructor(wn(...arguments))},convexHull:function(){return this.constructor(_n(...arguments))}}}},Ae={polyline:{P:Array.prototype,A:function(){this.push(...s(arguments))},G:{points:function(){return this}},M:{svgPath:function(){const t=Array(this.length).fill("L");return t[0]="M",`${this.map(((n,e)=>`${t[e]}${n[0]} ${n[1]}`)).join("")}`}},S:{fromPoints:function(){return this.constructor(...arguments)}}}};const je=(t,n)=>{for(let e=0;e<12;e+=1)t[e]=n[e];return t};var ke={matrix:{P:Array.prototype,A:function(){Et(arguments).forEach((t=>this.push(t)))},G:{},M:{copy:function(){return u.matrix(...Array.from(this))},set:function(){return je(this,Et(arguments))},isIdentity:function(){return ut(this)},multiply:function(t){return je(this,ft(this,t))},determinant:function(){return pt(this)},inverse:function(){return je(this,mt(this))},translate:function(t,n,e){return je(this,ft(this,gt(t,n,e)))},rotateX:function(t){return je(this,ft(this,yt(t)))},rotateY:function(t){return je(this,ft(this,vt(t)))},rotateZ:function(t){return je(this,ft(this,Mt(t)))},rotate:function(t,n,e){const r=xt(t,n,e);return je(this,ft(this,r))},scale:function(t){return je(this,ft(this,bt(t)))},reflectZ:function(t,n){const e=_t(t,n);return je(this,ft(this,e))},transform:function(...t){return u.vector(ht(this,n(3,At(t))))},transformVector:function(t){return u.vector(ht(this,n(3,At(t))))},transformLine:function(...t){const n=wt(t);return u.line(lt(this,n.vector,n.origin))}},S:{}}};const we=Object.assign({},ae,le,fe,pe,ve,xe,Pe,Oe,Ae,ke),$e=function(t,n){const e=Object.create(we[t].proto);return we[t].A.apply(e,n),e};Object.assign(u,{vector:function(){return $e("vector",arguments)},line:function(){return $e("line",arguments)},ray:function(){return $e("ray",arguments)},segment:function(){return $e("segment",arguments)},circle:function(){return $e("circle",arguments)},ellipse:function(){return $e("ellipse",arguments)},rect:function(){return $e("rect",arguments)},polygon:function(){return $e("polygon",arguments)},polyline:function(){return $e("polyline",arguments)},matrix:function(){return $e("matrix",arguments)}}),Object.keys(we).forEach((t=>{const n={};n.prototype=null!=we[t].P?Object.create(we[t].P):Object.create(Object.prototype),n.prototype.constructor=n,u[t].prototype=n.prototype,u[t].prototype.constructor=u[t],Object.keys(we[t].G).forEach((e=>Object.defineProperty(n.prototype,e,{get:we[t].G[e]}))),Object.keys(we[t].M).forEach((e=>Object.defineProperty(n.prototype,e,{value:we[t].M[e]}))),Object.keys(we[t].S).forEach((n=>Object.defineProperty(u[t],n,{value:we[t].S[n].bind(u[t].prototype)}))),we[t].proto=n.prototype}));const Se=u;return Se.core=Object.assign(Object.create(null),m,a,qt,L,st,Yt,xn,Pn,An,Ln,xn,tn,Pt,Ht,Tt,Gn,{enclosingPolygonPolygon:(t,n,e=O)=>{const r=t.map((t=>nn(n,t,e))).reduce(((t,n)=>t||n),!1),i=n.map((t=>nn(n,t,e))).reduce(((t,n)=>t&&n),!0);return!r&&i},intersectConvexPolygonLine:Zn,intersectCircleCircle:Vn,intersectCircleLine:Bn,intersectLineLine:On,overlapConvexPolygons:Jn,overlapConvexPolygonPoint:nn,overlapBoundingBoxes:(t,n)=>{const e=t.min.length>n.min.length?n.min.length:t.min.length;for(let r=0;r<e;r+=1)if(t.min[r]>n.max[r]||t.max[r]<n.min[r])return!1;return!0},overlapLineLine:Qn,overlapLinePoint:Nn,clipLineConvexPolygon:on,clipPolygonPolygon:(t,n,e=h)=>{let r,i,o,s;const c=t=>(i[0]-r[0])*(t[1]-r[1])>(i[1]-r[1])*(t[0]-r[0])+e,a=()=>{const t=[r[0]-i[0],r[1]-i[1]],n=[o[0]-s[0],o[1]-s[1]],e=r[0]*i[1]-r[1]*i[0],c=o[0]*s[1]-o[1]*s[0],a=1/(t[0]*n[1]-t[1]*n[0]);return[(e*n[0]-c*t[0])*a,(e*n[1]-c*t[1])*a]};let u=t;r=n[n.length-1];for(let t in n){i=n[t];const e=u;u=[],o=e[e.length-1];for(let t in e)s=e[t],c(s)?(c(o)||u.push(a()),u.push(s)):c(o)&&u.push(a()),o=s;r=i}return 0===u.length?void 0:u},splitConvexPolygon:En,straightSkeleton:Rn}),Se.typeof=t,Se.intersect=Wn,Se.overlap=ie,Se}));
