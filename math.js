!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):(t="undefined"!=typeof globalThis?globalThis:t||self).math=e()}(this,(function(){"use strict";const t=1e-6,e=180/Math.PI,n=Math.PI/180,r=2*Math.PI,o=Object.freeze({__proto__:null,EPSILON:t,R2D:e,D2R:n,TWO_PI:r}),a=()=>!0,i=t=>t*t,c=(t,e)=>t+(e||0),s=t=>void 0!==t,l=t=>Math.atan2(t[1],t[0]),u=t=>[Math.cos(t),Math.sin(t)],m=(e,n,r=t)=>Math.abs(e-n)<r,p=(e,n,r=t)=>m(e,n,r)?0:Math.sign(n-e),h=(e,n,r=t)=>{for(let t=0;t<Math.max(e.length,n.length);t+=1)if(!m(e[t]||0,n[t]||0,r))return!1;return!0},f=(e,n=t)=>e>-n,d=(e,n=t)=>e>n,g=a,M=a,v=f,_=d,x=(e,n=t)=>e>-n&&e<1+n,b=(e,n=t)=>e>n&&e<1-n,y=t=>t,k=e=>e<-t?0:e>1.000001?1:e,P=Object.freeze({__proto__:null,fnTrue:a,fnSquare:i,fnAdd:c,fnNotUndefined:s,fnAnd:(t,e)=>t&&e,fnCat:(t,e)=>t.concat(e),fnVec2Angle:l,fnToVec2:u,fnEqual:(t,e)=>t===e,fnEpsilonEqual:m,fnEpsilonCompare:p,fnEpsilonEqualVectors:h,include:f,exclude:d,includeL:g,excludeL:M,includeR:v,excludeR:_,includeS:x,excludeS:b,clampLine:y,clampRay:e=>e<-t?0:e,clampSegment:k}),O=t=>Math.sqrt(t.map(i).reduce(c,0)),A=t=>Math.sqrt(t[0]*t[0]+t[1]*t[1]),z=t=>Math.sqrt(t[0]*t[0]+t[1]*t[1]+t[2]*t[2]),L=t=>t.map(i).reduce(c,0),C=t=>{const e=O(t);return 0===e?t:t.map((t=>t/e))},N=t=>{const e=A(t);return 0===e?t:[t[0]/e,t[1]/e]},S=t=>{const e=z(t);return 0===e?t:[t[0]/e,t[1]/e,t[2]/e]},j=(t,e)=>t.map((t=>t*e)),w=(t,e)=>[t[0]*e,t[1]*e],R=(t,e)=>[t[0]*e,t[1]*e,t[2]*e],I=(t,e)=>t.map(((t,n)=>t+(e[n]||0))),q=(t,e)=>[t[0]+e[0],t[1]+e[1]],E=(t,e)=>[t[0]+e[0],t[1]+e[1],t[2]+e[2]],F=(t,e)=>t.map(((t,n)=>t-(e[n]||0))),T=(t,e)=>[t[0]-e[0],t[1]-e[1]],V=(t,e)=>[t[0]-e[0],t[1]-e[1],t[2]-e[2]],B=(t,e)=>t.map(((n,r)=>t[r]*e[r])).reduce(c,0),D=(t,e)=>t[0]*e[0]+t[1]*e[1],Z=(t,e)=>t.map(((t,n)=>(t+e[n])/2)),U=(t,e,n)=>{const r=1-n;return t.map(((t,o)=>t*r+(e[o]||0)*n))},H=(t,e)=>t[0]*e[1]-t[1]*e[0],X=(t,e)=>[t[1]*e[2]-t[2]*e[1],t[2]*e[0]-t[0]*e[2],t[0]*e[1]-t[1]*e[0]],Y=(t,e)=>Math.sqrt(t.map(((n,r)=>(t[r]-e[r])**2)).reduce(c,0)),$=(t,e)=>{const n=t[0]-e[0],r=t[1]-e[1];return Math.sqrt(n*n+r*r)},Q=t=>t.map((t=>-t)),W=t=>[-t[1],t[0]],G=t=>[t[1],-t[0]],J=(e,n,r=t)=>1-Math.abs(B(e,n))<r,K=(e,n,r=t)=>J(C(e),C(n),r),tt=(t,e)=>e.length===t?e:Array(t).fill(0).map(((t,n)=>e[n]?e[n]:t)),et=Object.freeze({__proto__:null,magnitude:O,magnitude2:A,magnitude3:z,magSquared:L,normalize:C,normalize2:N,normalize3:S,scale:j,scale2:w,scale3:R,add:I,add2:q,add3:E,subtract:F,subtract2:T,subtract3:V,dot:B,dot2:D,dot3:(t,e)=>t[0]*e[0]+t[1]*e[1]+t[2]*e[2],midpoint:Z,midpoint2:(t,e)=>w(q(t,e),.5),midpoint3:(t,e)=>R(E(t,e),.5),average:function(){if(0===arguments.length)return[];const t=arguments[0].length>0?arguments[0].length:0,e=Array(t).fill(0);return Array.from(arguments).forEach((t=>e.forEach(((n,r)=>{e[r]+=t[r]||0})))),e.map((t=>t/arguments.length))},lerp:U,cross2:H,cross3:X,distance:Y,distance2:$,distance3:(t,e)=>{const n=t[0]-e[0],r=t[1]-e[1],o=t[2]-e[2];return Math.sqrt(n*n+r*r+o*o)},flip:Q,rotate90:W,rotate270:G,degenerate:(e,n=t)=>e.map((t=>Math.abs(t))).reduce(c,0)<n,parallelNormalized:J,parallel:K,parallel2:(e,n,r=t)=>Math.abs(H(e,n))<r,resize:tt,resizeUp:(t,e)=>[t,e].map((n=>tt(Math.max(t.length,e.length),n)))}),nt=[1,0,0,1],rt=nt.concat(0,0),ot=t=>t[0]*t[3]-t[1]*t[2],at=(t,e=[0,0])=>{const n=Math.atan2(t[1],t[0]),r=Math.cos(n),o=Math.sin(n),a=Math.cos(-n),i=Math.sin(-n),c=r*a+o*i,s=r*-i+o*a,l=o*a+-r*i,u=o*-i+-r*a;return[c,s,l,u,e[0]+c*-e[0]+-e[1]*l,e[1]+s*-e[0]+-e[1]*u]},it=Object.freeze({__proto__:null,identity2x2:nt,identity2x3:rt,multiplyMatrix2Vector2:(t,e)=>[t[0]*e[0]+t[2]*e[1]+t[4],t[1]*e[0]+t[3]*e[1]+t[5]],multiplyMatrix2Line2:(t,e,n)=>({vector:[t[0]*e[0]+t[2]*e[1],t[1]*e[0]+t[3]*e[1]],origin:[t[0]*n[0]+t[2]*n[1]+t[4],t[1]*n[0]+t[3]*n[1]+t[5]]}),multiplyMatrices2:(t,e)=>[t[0]*e[0]+t[2]*e[1],t[1]*e[0]+t[3]*e[1],t[0]*e[2]+t[2]*e[3],t[1]*e[2]+t[3]*e[3],t[0]*e[4]+t[2]*e[5]+t[4],t[1]*e[4]+t[3]*e[5]+t[5]],determinant2:ot,invertMatrix2:t=>{const e=ot(t);if(!(Math.abs(e)<1e-6||Number.isNaN(e))&&Number.isFinite(t[4])&&Number.isFinite(t[5]))return[t[3]/e,-t[1]/e,-t[2]/e,t[0]/e,(t[2]*t[5]-t[3]*t[4])/e,(t[1]*t[4]-t[0]*t[5])/e]},makeMatrix2Translate:(t=0,e=0)=>nt.concat(t,e),makeMatrix2Scale:(t=[1,1],e=[0,0])=>[t[0],0,0,t[1],t[0]*-e[0]+e[0],t[1]*-e[1]+e[1]],makeMatrix2Rotate:(t,e=[0,0])=>{const n=Math.cos(t),r=Math.sin(t);return[n,r,-r,n,e[0],e[1]]},makeMatrix2Reflect:at}),ct=Object.freeze([1,0,0,0,1,0,0,0,1]),st=Object.freeze(ct.concat(0,0,0)),lt=(t,e)=>[t[0]*e[0]+t[3]*e[1]+t[6]*e[2],t[1]*e[0]+t[4]*e[1]+t[7]*e[2],t[2]*e[0]+t[5]*e[1]+t[8]*e[2],t[0]*e[3]+t[3]*e[4]+t[6]*e[5],t[1]*e[3]+t[4]*e[4]+t[7]*e[5],t[2]*e[3]+t[5]*e[4]+t[8]*e[5],t[0]*e[6]+t[3]*e[7]+t[6]*e[8],t[1]*e[6]+t[4]*e[7]+t[7]*e[8],t[2]*e[6]+t[5]*e[7]+t[8]*e[8],t[0]*e[9]+t[3]*e[10]+t[6]*e[11]+t[9],t[1]*e[9]+t[4]*e[10]+t[7]*e[11]+t[10],t[2]*e[9]+t[5]*e[10]+t[8]*e[11]+t[11]],ut=t=>t[0]*t[4]*t[8]-t[0]*t[7]*t[5]-t[3]*t[1]*t[8]+t[3]*t[7]*t[2]+t[6]*t[1]*t[5]-t[6]*t[4]*t[2],mt=(t,e,n,r,o)=>{const a=ct.concat([0,1,2].map((t=>e[t]||0))),i=Math.cos(t),c=Math.sin(t);return a[3*n+n]=i,a[3*n+r]=(o?1:-1)*c,a[3*r+n]=(o?-1:1)*c,a[3*r+r]=i,a},pt=Object.freeze({__proto__:null,identity3x3:ct,identity3x4:st,isIdentity3x4:e=>st.map(((n,r)=>Math.abs(n-e[r])<t)).reduce(((t,e)=>t&&e),!0),multiplyMatrix3Vector3:(t,e)=>[t[0]*e[0]+t[3]*e[1]+t[6]*e[2]+t[9],t[1]*e[0]+t[4]*e[1]+t[7]*e[2]+t[10],t[2]*e[0]+t[5]*e[1]+t[8]*e[2]+t[11]],multiplyMatrix3Line3:(t,e,n)=>({vector:[t[0]*e[0]+t[3]*e[1]+t[6]*e[2],t[1]*e[0]+t[4]*e[1]+t[7]*e[2],t[2]*e[0]+t[5]*e[1]+t[8]*e[2]],origin:[t[0]*n[0]+t[3]*n[1]+t[6]*n[2]+t[9],t[1]*n[0]+t[4]*n[1]+t[7]*n[2]+t[10],t[2]*n[0]+t[5]*n[1]+t[8]*n[2]+t[11]]}),multiplyMatrices3:lt,determinant3:ut,invertMatrix3:t=>{const e=ut(t);if(Math.abs(e)<1e-6||Number.isNaN(e)||!Number.isFinite(t[9])||!Number.isFinite(t[10])||!Number.isFinite(t[11]))return;const n=[t[4]*t[8]-t[7]*t[5],-t[1]*t[8]+t[7]*t[2],t[1]*t[5]-t[4]*t[2],-t[3]*t[8]+t[6]*t[5],t[0]*t[8]-t[6]*t[2],-t[0]*t[5]+t[3]*t[2],t[3]*t[7]-t[6]*t[4],-t[0]*t[7]+t[6]*t[1],t[0]*t[4]-t[3]*t[1],-t[3]*t[7]*t[11]+t[3]*t[8]*t[10]+t[6]*t[4]*t[11]-t[6]*t[5]*t[10]-t[9]*t[4]*t[8]+t[9]*t[5]*t[7],t[0]*t[7]*t[11]-t[0]*t[8]*t[10]-t[6]*t[1]*t[11]+t[6]*t[2]*t[10]+t[9]*t[1]*t[8]-t[9]*t[2]*t[7],-t[0]*t[4]*t[11]+t[0]*t[5]*t[10]+t[3]*t[1]*t[11]-t[3]*t[2]*t[10]-t[9]*t[1]*t[5]+t[9]*t[2]*t[4]],r=1/e;return n.map((t=>t*r))},makeMatrix3Translate:(t=0,e=0,n=0)=>ct.concat(t,e,n),makeMatrix3RotateX:(t,e=[0,0,0])=>mt(t,e,1,2,!0),makeMatrix3RotateY:(t,e=[0,0,0])=>mt(t,e,0,2,!1),makeMatrix3RotateZ:(t,e=[0,0,0])=>mt(t,e,0,1,!0),makeMatrix3Rotate:(t,e=[0,0,1],n=[0,0,0])=>{const r=[0,1,2].map((t=>n[t]||0)),[o,a,i]=tt(3,C(e)),c=Math.cos(t),s=Math.sin(t),l=1-c,u=ct.concat(-r[0],-r[1],-r[2]),m=ct.concat(r[0],r[1],r[2]);return lt(m,lt([l*o*o+c,l*a*o+i*s,l*i*o-a*s,l*o*a-i*s,l*a*a+c,l*i*a+o*s,l*o*i+a*s,l*a*i-o*s,l*i*i+c,0,0,0],u))},makeMatrix3Scale:(t=[1,1,1],e=[0,0,0])=>[t[0],0,0,0,t[1],0,0,0,t[2],t[0]*-e[0]+e[0],t[1]*-e[1]+e[1],t[2]*-e[2]+e[2]],makeMatrix3ReflectZ:(t,e=[0,0])=>{const n=at(t,e);return[n[0],n[1],0,n[2],n[3],0,0,0,1,n[4],n[5],0]}}),ht=t=>null!=t&&"function"==typeof t[Symbol.iterator],ft=function(){switch(arguments.length){case void 0:case 0:return Array.from(arguments);case 1:return ht(arguments[0])&&"string"!=typeof arguments[0]?ft(...arguments[0]):[arguments[0]];default:return Array.from(arguments).map((t=>ht(t)?[...ft(t)]:t))}},dt=function(){switch(arguments.length){case void 0:case 0:return Array.from(arguments);case 1:return ht(arguments[0])&&"string"!=typeof arguments[0]?dt(...arguments[0]):[arguments[0]];default:return Array.from(arguments).map((t=>ht(t)?[...dt(t)]:t)).reduce(((t,e)=>t.concat(e)),[])}},gt=Object.freeze({__proto__:null,semiFlattenArrays:ft,flattenArrays:dt}),Mt=function(){let t=dt(arguments);return t.length>0&&"object"==typeof t[0]&&null!==t[0]&&!Number.isNaN(t[0].x)&&(t=["x","y","z"].map((e=>t[0][e])).filter(s)),t.filter((t=>"number"==typeof t))},vt=function(){return ft(arguments).map((t=>Mt(t)))},_t=(t,e)=>({vector:t||[],origin:e||[]}),xt=[[0,1,3,4,9,10],[0,1,2,3,4,5,6,7,8,9,10,11],[0,1,2,void 0,3,4,5,void 0,6,7,8,void 0,9,10,11]];[11,7,3].forEach((t=>delete xt[2][t]));const bt=t=>t<8?xt[0]:t<13?xt[1]:xt[2],yt=function(t){const e=`${t}`.match(/(?:\.(\d+))?(?:[eE]([+-]?\d+))?$/);return e?Math.max(0,(e[1]?e[1].length:0)-(e[2]?+e[2]:0)):0},kt=(t,e,n)=>{const r=t.map(((t,r)=>({i:r,d:n(e,t)})));let o,a=1/0;for(let t=0;t<r.length;t+=1)r[t].d<a&&(o=t,a=r[t].d);return o},Pt=(e,n=t)=>{if(!e.length)return;const r=((e,n=0,r=p,o=t)=>{let a=[0];for(let t=1;t<e.length;t+=1)switch(r(e[t][n],e[a[0]][n],o)){case 0:a.push(t);break;case 1:a=[t]}return a})(e,0,p,n);let o=0;for(let t=1;t<r.length;t+=1)e[r[t]][1]<e[r[o]][1]&&(o=t);return r[o]},Ot=(t,e,n)=>t.map(((t,r)=>({i:r,n:n(t,e)}))).sort(((t,e)=>t.n-e.n)).map((t=>t.i)),At=(e,n=t)=>{const r=[[0]];let o=0;for(let t=1;t<e.length;t+=1)m(e[t],e[t-1],n)?r[o].push(t):(o=r.length,r.push([t]));return r},zt=(e=[],n=t)=>{const r=Pt(e,n),o=e.map((t=>T(t,e[r]))).map((t=>N(t))).map((t=>D([0,1],t))),a=o.map(((t,e)=>({a:t,i:e}))).sort(((t,e)=>t.a-e.a)).map((t=>t.i)).filter((t=>t!==r));return[[r]].concat(At(a.map((t=>o[t])),n).map((t=>t.map((t=>a[t])))).map((t=>1===t.length?t:t.map((t=>({i:t,len:$(e[t],e[r])}))).sort(((t,e)=>t.len-e.len)).map((t=>t.i)))))},Lt={...o,...P,...Object.freeze({__proto__:null,getVector:Mt,getVectorOfVectors:vt,getSegment:function(){const t=ft(arguments);return 4===t.length?[[t[0],t[1]],[t[2],t[3]]]:t.map((t=>Mt(t)))},getLine:function(){const t=ft(arguments);return 0===t.length?_t([],[]):t[0].constructor===Object&&void 0!==t[0].vector?_t(t[0].vector||[],t[0].origin||[]):"number"==typeof t[0]?_t(Mt(t)):_t(...t.map((t=>Mt(t))))},getMatrix3x4:function(){const t=dt(arguments),e=[...st];return bt(t.length).forEach(((n,r)=>{null!=t[r]&&(e[n]=t[r])})),e},pointsToLine:(...t)=>{const e=vt(...t);return{vector:F(e[1],e[0]),origin:e[0]}},rayLineToUniqueLine:({vector:t,origin:e})=>{const n=O(t),r=W(t),o=B(e,r)/n;return{normal:j(r,1/n),distance:o}},uniqueLineToRayLine:({normal:t,distance:e})=>_t(G(t),j(t,e))}),...gt,...Object.freeze({__proto__:null,cleanNumber:function(t,e=15){if("number"!=typeof t)return t;const n=parseFloat(t.toFixed(e));return yt(n)===Math.min(e,yt(t))?t:n}}),...Object.freeze({__proto__:null,smallestComparisonSearch:kt,minimum2DPointIndex:Pt}),...Object.freeze({__proto__:null,sortAgainstItem:Ot,sortPointsAlongVector:(t,e)=>Ot(t,e,B),clusterIndicesOfSortedNumbers:At,radialSortPointIndices2:zt})},Ct=Object.freeze([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]),Nt=(t,e)=>[t[0]*e[0]+t[4]*e[1]+t[8]*e[2]+t[12]*e[3],t[1]*e[0]+t[5]*e[1]+t[9]*e[2]+t[13]*e[3],t[2]*e[0]+t[6]*e[1]+t[10]*e[2]+t[14]*e[3],t[3]*e[0]+t[7]*e[1]+t[11]*e[2]+t[15]*e[3],t[0]*e[4]+t[4]*e[5]+t[8]*e[6]+t[12]*e[7],t[1]*e[4]+t[5]*e[5]+t[9]*e[6]+t[13]*e[7],t[2]*e[4]+t[6]*e[5]+t[10]*e[6]+t[14]*e[7],t[3]*e[4]+t[7]*e[5]+t[11]*e[6]+t[15]*e[7],t[0]*e[8]+t[4]*e[9]+t[8]*e[10]+t[12]*e[11],t[1]*e[8]+t[5]*e[9]+t[9]*e[10]+t[13]*e[11],t[2]*e[8]+t[6]*e[9]+t[10]*e[10]+t[14]*e[11],t[3]*e[8]+t[7]*e[9]+t[11]*e[10]+t[15]*e[11],t[0]*e[12]+t[4]*e[13]+t[8]*e[14]+t[12]*e[15],t[1]*e[12]+t[5]*e[13]+t[9]*e[14]+t[13]*e[15],t[2]*e[12]+t[6]*e[13]+t[10]*e[14]+t[14]*e[15],t[3]*e[12]+t[7]*e[13]+t[11]*e[14]+t[15]*e[15]],St=t=>{const e=t[10]*t[15]-t[11]*t[14],n=t[9]*t[15]-t[11]*t[13],r=t[9]*t[14]-t[10]*t[13],o=t[8]*t[15]-t[11]*t[12],a=t[8]*t[14]-t[10]*t[12],i=t[8]*t[13]-t[9]*t[12];return t[0]*(t[5]*e-t[6]*n+t[7]*r)-t[1]*(t[4]*e-t[6]*o+t[7]*a)+t[2]*(t[4]*n-t[5]*o+t[7]*i)-t[3]*(t[4]*r-t[5]*a+t[6]*i)},jt=Object.freeze([1,0,0,0,0,1,0,0,0,0,1,0]),wt=(t=0,e=0,n=0)=>[...jt,t,e,n,1],Rt=(t,e,n,r,o)=>{const a=wt(...e),i=Math.cos(t),c=Math.sin(t);return a[4*n+n]=i,a[4*n+r]=(o?1:-1)*c,a[4*r+n]=(o?-1:1)*c,a[4*r+r]=i,a},It={...et,...it,...pt,...Object.freeze({__proto__:null,identity4x4:Ct,isIdentity4x4:e=>Ct.map(((n,r)=>Math.abs(n-e[r])<t)).reduce(((t,e)=>t&&e),!0),multiplyMatrix4Vector3:(t,e)=>[t[0]*e[0]+t[4]*e[1]+t[8]*e[2]+t[12],t[1]*e[0]+t[5]*e[1]+t[9]*e[2]+t[13],t[2]*e[0]+t[6]*e[1]+t[10]*e[2]+t[14]],multiplyMatrix4Line3:(t,e,n)=>({vector:[t[0]*e[0]+t[4]*e[1]+t[8]*e[2],t[1]*e[0]+t[5]*e[1]+t[9]*e[2],t[2]*e[0]+t[6]*e[1]+t[10]*e[2]],origin:[t[0]*n[0]+t[4]*n[1]+t[8]*n[2]+t[12],t[1]*n[0]+t[5]*n[1]+t[9]*n[2]+t[13],t[2]*n[0]+t[6]*n[1]+t[10]*n[2]+t[14]]}),multiplyMatrices4:Nt,determinant4:St,invertMatrix4:t=>{const e=St(t);if(Math.abs(e)<1e-6||Number.isNaN(e)||!Number.isFinite(t[12])||!Number.isFinite(t[13])||!Number.isFinite(t[14]))return;const n=t[10]*t[15]-t[11]*t[14],r=t[9]*t[15]-t[11]*t[13],o=t[9]*t[14]-t[10]*t[13],a=t[8]*t[15]-t[11]*t[12],i=t[8]*t[14]-t[10]*t[12],c=t[8]*t[13]-t[9]*t[12],s=t[6]*t[15]-t[7]*t[14],l=t[5]*t[15]-t[7]*t[13],u=t[5]*t[14]-t[6]*t[13],m=t[6]*t[11]-t[7]*t[10],p=t[5]*t[11]-t[7]*t[9],h=t[5]*t[10]-t[6]*t[9],f=t[4]*t[15]-t[7]*t[12],d=t[4]*t[14]-t[6]*t[12],g=t[4]*t[11]-t[7]*t[8],M=t[4]*t[10]-t[6]*t[8],v=t[4]*t[13]-t[5]*t[12],_=t[4]*t[9]-t[5]*t[8],x=[+(t[5]*n-t[6]*r+t[7]*o),-(t[1]*n-t[2]*r+t[3]*o),+(t[1]*s-t[2]*l+t[3]*u),-(t[1]*m-t[2]*p+t[3]*h),-(t[4]*n-t[6]*a+t[7]*i),+(t[0]*n-t[2]*a+t[3]*i),-(t[0]*s-t[2]*f+t[3]*d),+(t[0]*m-t[2]*g+t[3]*M),+(t[4]*r-t[5]*a+t[7]*c),-(t[0]*r-t[1]*a+t[3]*c),+(t[0]*l-t[1]*f+t[3]*v),-(t[0]*p-t[1]*g+t[3]*_),-(t[4]*o-t[5]*i+t[6]*c),+(t[0]*o-t[1]*i+t[2]*c),-(t[0]*u-t[1]*d+t[2]*v),+(t[0]*h-t[1]*M+t[2]*_)],b=1/e;return x.map((t=>t*b))},makeMatrix4Translate:wt,makeMatrix4RotateX:(t,e=[0,0,0])=>Rt(t,e,1,2,!0),makeMatrix4RotateY:(t,e=[0,0,0])=>Rt(t,e,0,2,!1),makeMatrix4RotateZ:(t,e=[0,0,0])=>Rt(t,e,0,1,!0),makeMatrix4Rotate:(t,e=[0,0,1],n=[0,0,0])=>{const r=[0,1,2].map((t=>n[t]||0)),[o,a,i]=tt(3,C(e)),c=Math.cos(t),s=Math.sin(t),l=1-c,u=wt(-r[0],-r[1],-r[2]),m=wt(r[0],r[1],r[2]);return Nt(m,Nt([l*o*o+c,l*a*o+i*s,l*i*o-a*s,0,l*o*a-i*s,l*a*a+c,l*i*a+o*s,0,l*o*i+a*s,l*a*i-o*s,l*i*i+c,0,0,0,0,1],u))},makeMatrix4Scale:(t=[1,1,1],e=[0,0,0])=>[t[0],0,0,0,0,t[1],0,0,0,0,t[2],0,t[0]*-e[0]+e[0],t[1]*-e[1]+e[1],t[2]*-e[2]+e[2],1],makeMatrix4ReflectZ:(t,e=[0,0])=>{const n=at(t,e);return[n[0],n[1],0,0,n[2],n[3],0,0,0,0,1,0,n[4],n[5],0,1]},makePerspectiveMatrix4:(t,e,n,r)=>{const o=Math.tan(.5*Math.PI-.5*t),a=1/(n-r);return[o/e,0,0,0,0,o,0,0,0,0,(n+r)*a,-1,0,0,n*r*a*2,0]},makeOrthographicMatrix4:(t,e,n,r,o,a)=>[2/(e-r),0,0,0,0,2/(t-n),0,0,0,0,2/(o-a),0,(r+e)/(r-e),(n+t)/(n-t),(o+a)/(o-a),1],makeLookAtMatrix4:(t,e,n)=>{const r=S(V(t,e)),o=S(X(n,r)),a=S(X(r,o));return[o[0],o[1],o[2],0,a[0],a[1],a[2],0,r[0],r[1],r[2],0,t[0],t[1],t[2],1]}}),...Object.freeze({__proto__:null,quaternionFromTwoVectors:(t,e)=>{const n=X(t,e),r=[n[0],n[1],n[2],B(t,e)];return r[3]+=O(r),C(r)},matrix4FromQuaternion:t=>Nt([t[3],t[2],-t[1],t[0],-t[2],t[3],t[0],t[1],t[1],-t[0],t[3],t[2],-t[0],-t[1],-t[2],t[3]],[t[3],t[2],-t[1],-t[0],-t[2],t[3],t[0],-t[1],t[1],-t[0],t[3],-t[2],t[0],t[1],t[2],t[3]])})},qt=(t,e)=>{for(;t<0;)t+=r;for(;e<0;)e+=r;for(;t>r;)t-=r;for(;e>r;)e-=r;const n=t-e;return n>=0?n:r-(e-t)},Et=(t,e)=>{for(;t<0;)t+=r;for(;e<0;)e+=r;for(;t>r;)t-=r;for(;e>r;)e-=r;const n=e-t;return n>=0?n:r-(t-e)},Ft=(t,e)=>{const n=e[0]*t[0]+e[1]*t[1],o=e[0]*t[1]-e[1]*t[0];let a=Math.atan2(o,n);return a<0&&(a+=r),a},Tt=(t,e)=>{const n=t[0]*e[0]+t[1]*e[1],o=t[0]*e[1]-t[1]*e[0];let a=Math.atan2(o,n);return a<0&&(a+=r),a},Vt=(t,e)=>u(l(t)-Ft(t,e)/2),Bt=(t,e)=>u(l(t)+Tt(t,e)/2),Dt=(t,e,n)=>{const r=qt(t,e)/n;return Array.from(Array(n-1)).map(((e,n)=>t+r*(n+1)))},Zt=(t,e,n)=>{const r=Et(t,e)/n;return Array.from(Array(n-1)).map(((e,n)=>t+r*(n+1)))},Ut=function(){const t=Array.from(arguments).flat(),e=t.map(((t,e)=>e)).sort(((e,n)=>t[e]-t[n]));return e.slice(e.indexOf(0),e.length).concat(e.slice(0,e.indexOf(0)))},Ht=function(){const t=Array.from(arguments).flat(),e=Ut(t).map((e=>t[e]));return e.map(((t,e,n)=>[t,n[(e+1)%n.length]])).map((t=>Et(t[0],t[1])))},Xt=(e,n,r,o=t)=>{const a=N(T(n,e)),i=N(T(r,e)),c=H(a,i);return m(c,0,o)?m($(e,n)+$(n,r),$(e,r))?0:void 0:Math.sign(c)},Yt=Object.freeze({__proto__:null,isCounterClockwiseBetween:(t,e,n)=>{for(;n<e;)n+=r;for(;t>e;)t-=r;for(;t<e;)t+=r;return t<n},clockwiseAngleRadians:qt,counterClockwiseAngleRadians:Et,clockwiseAngle2:Ft,counterClockwiseAngle2:Tt,clockwiseBisect2:Vt,counterClockwiseBisect2:Bt,clockwiseSubsectRadians:Dt,counterClockwiseSubsectRadians:Zt,clockwiseSubsect2:(t,e,n)=>{const r=Math.atan2(t[1],t[0]),o=Math.atan2(e[1],e[0]);return Dt(r,o,n).map(u)},counterClockwiseSubsect2:(t,e,n)=>{const r=Math.atan2(t[1],t[0]),o=Math.atan2(e[1],e[0]);return Zt(r,o,n).map(u)},counterClockwiseOrderRadians:Ut,counterClockwiseOrder2:function(){return Ut(ft(arguments).map(l))},counterClockwiseSectorsRadians:Ht,counterClockwiseSectors2:function(){return Ht(ft(arguments).map(l))},threePointTurnDirection:Xt}),$t=(e=[],n=!1,r=t)=>{if(e.length<2)return[];const o=zt(e,r).map((t=>1===t.length?t:(t=>t.concat(t.slice(0,-1).reverse()))(t))).flat();o.push(o[0]);const a=[o[0]];let i=1;const c={"-1":()=>a.pop(),1:t=>{a.push(t),i+=1},undefined:()=>{i+=1}};for(c[0]=n?c[1]:c[-1];i<o.length;){if(a.length<2){a.push(o[i]),i+=1;continue}const t=a[a.length-2],n=a[a.length-1],s=o[i];c[Xt(...[t,n,s].map((t=>e[t])),r)](s)}return a.pop(),a},Qt=(e,n,r=g,o=g,a=t)=>{const i=H(N(e.vector),N(n.vector));if(Math.abs(i)<a)return;const c=H(e.vector,n.vector),s=-c,l=[n.origin[0]-e.origin[0],n.origin[1]-e.origin[1]],u=[-l[0],-l[1]],m=H(l,n.vector)/c,p=H(u,e.vector)/s;return r(m,a/A(e.vector))&&o(p,a/A(n.vector))?q(e.origin,w(e.vector,m)):void 0},Wt=(t,e,n)=>({vector:U(t.vector,e.vector,n),origin:U(t.origin,e.origin,n)}),Gt=({vector:e,origin:n},r,o=y,a=t)=>{n=tt(e.length,n),r=tt(e.length,r);const i=L(e),c=F(r,n),s=o(B(e,c)/i,a);return I(n,j(e,s))},Jt=t=>Array.from(Array(Math.floor(t))).map(((e,n)=>r*(n/t))),Kt=(t,e)=>t.map((t=>[e*Math.cos(t),e*Math.sin(t)])),te=(t=3,e=1)=>Kt(Jt(t),e),ee=(t=3,e=1)=>{const n=Math.PI/t,r=Jt(t).map((t=>t+n));return Kt(r,e)},ne=t=>.5*t.map(((t,e,n)=>{const r=n[(e+1)%n.length];return t[0]*r[1]-r[0]*t[1]})).reduce(c,0),re=(t,e,n)=>{const r=t.map(((t,e)=>({vector:n[e],origin:t}))).map(((t,e,n)=>Qt(t,n[(e+1)%n.length],_,_))),o=e.map(((t,e)=>Gt(t,r[e],(t=>t))));if(3===t.length)return t.map((t=>({type:"skeleton",points:[t,r[0]]}))).concat([{type:"perpendicular",points:[o[0],r[0]]}]);const a=r.map(((t,e)=>Y(t,o[e])));let i=0;a.forEach(((t,e)=>{t<a[i]&&(i=e)}));const c=[{type:"skeleton",points:[t[i],r[i]]},{type:"skeleton",points:[t[(i+1)%t.length],r[i]]},{type:"perpendicular",points:[o[i],r[i]]}],s=Vt(Q(e[(i+e.length-1)%e.length].vector),e[(i+1)%e.length].vector),l=i===t.length-1;return t.splice(i,2,r[i]),e.splice(i,1),n.splice(i,2,s),l&&(t.splice(0,1),n.splice(0,1),e.push(e.shift())),c.concat(re(t,e,n))},oe={...Object.freeze({__proto__:null,convexHullIndices:$t,convexHull:(e=[],n=!1,r=t)=>$t(e,n,r).map((t=>e[t]))}),...Object.freeze({__proto__:null,collinearBetween:(e,n,r,o=!1,a=t)=>{if([e,r].map((t=>h(n,t))).reduce(((t,e)=>t||e),!1))return o;const i=[[e,n],[n,r]].map((t=>F(t[1],t[0]))).map((t=>C(t)));return m(1,B(...i),a)},bisectLines2:(e,n,r=t)=>{const o=H(e.vector,n.vector),a=B(e.vector,n.vector),i=o>-r?[Bt(e.vector,n.vector)]:[Vt(e.vector,n.vector)];i[1]=o>-r?W(i[0]):G(i[0]);const c=((n.origin[0]-e.origin[0])*n.vector[1]-n.vector[0]*(n.origin[1]-e.origin[1]))/o,s=[e.vector,n.vector].map((t=>C(t))),l=Math.abs(H(...s))<r,u=l?Z(e.origin,n.origin):[e.origin[0]+e.vector[0]*c,e.origin[1]+e.vector[1]*c],m=i.map((t=>({vector:t,origin:u})));return l&&delete m[a>-r?1:0],m},lerpLines:Wt,pleat:(t,e,n)=>Array.from(Array(n-1)).map(((t,e)=>(e+1)/n)).map((n=>Wt(t,e,n)))}),...Object.freeze({__proto__:null,nearestPoint2:(t,e)=>{const n=kt(t,e,$);return void 0===n?void 0:t[n]},nearestPoint:(t,e)=>{const n=kt(t,e,Y);return void 0===n?void 0:t[n]},nearestPointOnLine:Gt,nearestPointOnPolygon:(t,e)=>t.map(((t,e,n)=>F(n[(e+1)%n.length],t))).map(((e,n)=>({vector:e,origin:t[n]}))).map((t=>Gt(t,e,k))).map(((t,n)=>({point:t,edge:n,distance:Y(t,e)}))).sort(((t,e)=>t.distance-e.distance)).shift(),nearestPointOnCircle:({radius:t,origin:e},n)=>I(e,j(C(F(n,e)),t))}),...Object.freeze({__proto__:null,makePolygonCircumradius:te,makePolygonCircumradiusSide:ee,makePolygonInradius:(t=3,e=1)=>te(t,e/Math.cos(Math.PI/t)),makePolygonInradiusSide:(t=3,e=1)=>ee(t,e/Math.cos(Math.PI/t)),makePolygonSideLength:(t=3,e=1)=>te(t,e/2/Math.sin(Math.PI/t)),makePolygonSideLengthSide:(t=3,e=1)=>ee(t,e/2/Math.sin(Math.PI/t)),makePolygonNonCollinear:(e,n=t)=>{const r=e.map(((t,e,n)=>[t,n[(e+1)%n.length]])).map((t=>F(t[1],t[0]))).map(((t,e,n)=>[t,n[(e+n.length-1)%n.length]])).map((t=>!K(t[1],t[0],n)));return e.filter(((t,e)=>r[e]))},circumcircle:(e,n,r)=>{const o=n[0]-e[0],a=n[1]-e[1],i=r[0]-e[0],c=r[1]-e[1],s=o*(e[0]+n[0])+a*(e[1]+n[1]),l=i*(e[0]+r[0])+c*(e[1]+r[1]),u=2*(o*(r[1]-n[1])-a*(r[0]-n[0]));if(Math.abs(u)<t){const t=Math.min(e[0],n[0],r[0]),o=Math.min(e[1],n[1],r[1]),a=.5*(Math.max(e[0],n[0],r[0])-t),i=.5*(Math.max(e[1],n[1],r[1])-o);return{origin:[t+a,o+i],radius:Math.sqrt(a*a+i*i)}}const m=[(c*s-a*l)/u,(o*l-i*s)/u],p=m[0]-e[0],h=m[1]-e[1];return{origin:m,radius:Math.sqrt(p*p+h*h)}},signedArea:ne,centroid:t=>{const e=1/(6*ne(t));return t.map(((t,e,n)=>{const r=n[(e+1)%n.length],o=t[0]*r[1]-r[0]*t[1];return[(t[0]+r[0])*o,(t[1]+r[1])*o]})).reduce(((t,e)=>[t[0]+e[0],t[1]+e[1]]),[0,0]).map((t=>t*e))},boundingBox:(t,e=0)=>{if(!t||!t.length)return;const n=Array(t[0].length).fill(1/0),r=Array(t[0].length).fill(-1/0);t.forEach((t=>t.forEach(((t,o)=>{t<n[o]&&(n[o]=t-e),t>r[o]&&(r[o]=t+e)}))));const o=r.map(((t,e)=>t-n[e]));return{min:n,max:r,span:o}}}),...Yt,straightSkeleton:t=>{const e=t.map(((t,e,n)=>[t,n[(e+1)%n.length]])).map((t=>({vector:F(t[1],t[0]),origin:t[0]}))),n=t.map(((t,e,n)=>[(e-1+n.length)%n.length,e,(e+1)%n.length].map((t=>n[t])))).map((t=>[F(t[0],t[1]),F(t[2],t[1])])).map((t=>Vt(...t)));return re([...t],e,n)}},ae=(e,n,r=d,o=t)=>e.map(((t,e,n)=>[t,n[(e+1)%n.length]])).map((t=>H(C(F(t[1],t[0])),F(n,t[0])))).map((t=>r(t,o))).map(((t,e,n)=>t===n[0])).reduce(((t,e)=>t&&e),!0),ie=(t,e,n)=>I(e,j(t,n)),ce=(e,n,r,o,a)=>e.map(((t,e,n)=>[F(n[(e+1)%n.length],t),t])).map((e=>((e,n,r,o,a=x,i=t)=>{const c=H(C(e),C(r));if(Math.abs(c)<i)return;const s=H(e,r),l=-s,u=F(o,n),m=Q(u),p=H(u,r)/s;return a(H(m,e)/l,i/O(r))?p:void 0})(n,r,e[0],e[1],o,a))).filter(s).sort(((t,e)=>t-e)),se=t=>{for(let e=1;e<t.length;e+=1)if(!h(t[0],t[e]))return[t[0],t[e]]},le=(e,{vector:n,origin:r},o=x,a=g,i=t)=>{const c=e.map(((t,e,n)=>[t,n[(e+1)%n.length]])).map((t=>Qt({vector:F(t[1],t[0]),origin:t[0]},{vector:n,origin:r},o,a,i))).filter((t=>void 0!==t));switch(c.length){case 0:return;case 1:return[c];default:return se(c)||[c[0]]}},ue=(t,e,n)=>{const r=e[0]-t[0],o=e[1]-t[1],a=r*Math.cos(n)+o*Math.sin(n),i=o*Math.cos(n)-r*Math.sin(n);return[t[0]+a,t[1]+i]},me=({vector:e,origin:n},r,o=M,a=t)=>{const i=F(r,n),c=L(e),s=Math.sqrt(c);if(s<a)return!1;const l=H(i,e.map((t=>t/s))),u=B(i,e)/c;return Math.abs(l)<a&&o(u,a/s)};return{...Lt,...It,...oe,...{...Object.freeze({__proto__:null,enclosingBoundingBoxes:(t,e)=>{const n=Math.min(t.min.length,e.min.length);for(let r=0;r<n;r+=1)if(e.min[r]<t.min[r]||e.max[r]>t.max[r])return!1;return!0},enclosingPolygonPolygon:(t,e,n=f)=>{const r=t.map((t=>ae(e,t,n))).reduce(((t,e)=>t||e),!1),o=e.map((t=>ae(e,t,n))).reduce(((t,e)=>t&&e),!0);return!r&&o}}),clipLineConvexPolygon:(e,{vector:n,origin:r},o=f,a=g,i=t)=>{const c=ce(e,n,r,x,i);if(c.length<2)return;const s=((t,e,n)=>{let r=0,o=t.length-1;for(;r<o&&!e(t[r+1]-t[r],n);)r+=1;for(;o>r&&!e(t[o]-t[o-1],n);)o-=1;if(!(r>=o))return[t[r],t[o]]})(c,o,2*i/O(n));if(void 0===s)return;const l=s.map((t=>a(t)?t:t<.5?0:1));if(Math.abs(l[0]-l[1])<2*i/O(n))return;const u=ie(n,r,(l[0]+l[1])/2);return ae(e,u,o,i)?l.map((t=>ie(n,r,t))):void 0},clipPolygonPolygon:(e,n,r=t)=>{const o=(t,e,n)=>(n[0]-e[0])*(t[1]-e[1])>(n[1]-e[1])*(t[0]-e[0])+r,a=(t,e,n,r)=>{const o=[t[0]-e[0],t[1]-e[1]],a=[r[0]-n[0],r[1]-n[1]],i=t[0]*e[1]-t[1]*e[0],c=r[0]*n[1]-r[1]*n[0],s=1/(o[0]*a[1]-o[1]*a[0]);return[(i*a[0]-c*o[0])*s,(i*a[1]-c*o[1])*s]};let i=e,c=n[n.length-1];for(let t=0;t<n.length;t+=1){const e=n[t],r=i;i=[];let s=r[r.length-1];for(let t=0;t<r.length;t+=1){const n=r[t];o(n,c,e)?(o(s,c,e)||i.push(a(c,e,n,s)),i.push(n)):o(s,c,e)&&i.push(a(c,e,n,s)),s=n}c=e}return 0===i.length?void 0:i},intersectConvexPolygonLine:(e,{vector:n,origin:r},o=x,a=M,i=t)=>{const c=le(e,{vector:n,origin:r},o,a,i);let s;switch(a){case _:s=v;break;case b:s=x;break;default:return c}const l=le(e,{vector:n,origin:r},x,s,i);if(void 0===l)return;const u=se(l);if(void 0===u)switch(a){case _:return ae(e,r,d,i)?l:void 0;case b:return ae(e,I(r,n),d,i)||ae(e,r,d,i)?l:void 0;case M:default:return}return ae(e,Z(...u),d,i)?u:c},intersectCircleCircle:(e,n,r=t)=>{const o=e.radius<n.radius?e.radius:n.radius,a=e.radius<n.radius?n.radius:e.radius,i=e.radius<n.radius?e.origin:n.origin,c=e.radius<n.radius?n.origin:e.origin,s=[i[0]-c[0],i[1]-c[1]],l=Math.sqrt(s[0]**2+s[1]**2);if(l<r)return;const u=s.map(((t,e)=>t/l*a+c[e]));if(Math.abs(a+o-l)<r||Math.abs(a-(o+l))<r)return[u];if(l+o<a||a+o<l)return;const m=(p=(o*o-l*l-a*a)/(-2*l*a))>=1?0:p<=-1?Math.PI:Math.acos(p);var p;return[ue(c,u,+m),ue(c,u,-m)]},intersectCircleLine:(e,n,r=g,o=t)=>{const a=n.vector[0]**2+n.vector[1]**2,i=Math.sqrt(a),c=0===i?n.vector:n.vector.map((t=>t/i)),s=W(c),l=F(n.origin,e.origin),u=H(l,c);if(Math.abs(u)>e.radius+o)return;const m=Math.sqrt(e.radius**2-u**2),p=(t,n)=>e.origin[n]-s[n]*u+c[n]*t,h=Math.abs(e.radius-Math.abs(u))<o?[m].map((t=>[t,t].map(p))):[-m,m].map((t=>[t,t].map(p))),f=h.map((t=>t.map(((t,e)=>t-n.origin[e])))).map((t=>t[0]*n.vector[0]+n.vector[1]*t[1])).map((t=>t/a));return h.filter(((t,e)=>r(f[e],o)))},intersectLineLine:Qt,overlapConvexPolygons:(e,n,r=t)=>{for(let t=0;t<2;t+=1){const o=0===t?e:n,a=0===t?n:e;for(let t=0;t<o.length;t+=1){const e=o[t],n=W(F(o[(t+1)%o.length],o[t])),i=a.map((t=>F(t,e))).map((t=>B(n,t))),c=o[(t+2)%o.length],s=B(n,F(c,e))>0;if(i.map((t=>s?t<r:t>-r)).reduce(((t,e)=>t&&e),!0))return!1}}return!0},overlapConvexPolygonPoint:ae,overlapBoundingBoxes:(t,e)=>{const n=Math.min(t.min.length,e.min.length);for(let r=0;r<n;r+=1)if(t.min[r]>e.max[r]||t.max[r]<e.min[r])return!1;return!0},overlapLineLine:(e,n,r=M,o=M,a=t)=>{const i=H(e.vector,n.vector),c=-i,s=T(n.origin,e.origin);if(Math.abs(i)<a){if(Math.abs(H(s,e.vector))>a)return!1;const t=s,r=q(t,n.vector),o=D(e.vector,e.vector),i=D(t,e.vector)/o,c=D(r,e.vector)/o,l=(i<c?c:i)<a;return!((i<c?i:c)>1-a)&&!l}const l=[-s[0],-s[1]],u=H(s,n.vector)/i,m=H(l,e.vector)/c;return r(u,a/A(e.vector))&&o(m,a/A(n.vector))},overlapLinePoint:me,splitConvexPolygon:(t,e)=>{const n=t.map(((t,n)=>({point:me(e,t,g)?t:null,at_index:n}))).filter((t=>null!=t.point)),r=t.map(((t,e,n)=>({vector:F(t,n[(e+1)%n.length]),origin:n[(e+1)%n.length]}))).map(((t,n)=>({point:Qt(e,t,M,b),at_index:n}))).filter((t=>null!=t.point));if(2===r.length){const e=r.slice().sort(((t,e)=>t.at_index-e.at_index)),n=t.slice(e[1].at_index+1).concat(t.slice(0,e[0].at_index+1));n.push(e[0].point),n.push(e[1].point);const o=t.slice(e[0].at_index+1,e[1].at_index+1);return o.push(e[1].point),o.push(e[0].point),[n,o]}if(1===r.length&&1===n.length){n[0].type="v",r[0].type="e";const e=n.concat(r).sort(((t,e)=>t.at_index-e.at_index)),o=t.slice(e[1].at_index+1).concat(t.slice(0,e[0].at_index+1));"e"===e[0].type&&o.push(e[0].point),o.push(e[1].point);const a=t.slice(e[0].at_index+1,e[1].at_index+1);return"e"===e[1].type&&a.push(e[1].point),a.push(e[0].point),[o,a]}if(2===n.length){const e=n.slice().sort(((t,e)=>t.at_index-e.at_index));return[t.slice(e[1].at_index).concat(t.slice(0,e[0].at_index+1)),t.slice(e[0].at_index,e[1].at_index+1)]}return[t.slice()]}}}}));