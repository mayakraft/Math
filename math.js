!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):(t="undefined"!=typeof globalThis?globalThis:t||self).math=e()}(this,(function(){"use strict";const t=1e-6,e=180/Math.PI,r=Math.PI/180,n=2*Math.PI,o=Object.freeze({__proto__:null,EPSILON:t,R2D:e,D2R:r,TWO_PI:n}),a=()=>!0,i=t=>t*t,c=(t,e)=>t+(e||0),s=t=>void 0!==t,l=t=>Math.atan2(t[1],t[0]),u=t=>[Math.cos(t),Math.sin(t)],p=(e,r,n=t)=>Math.abs(e-r)<n,m=(e,r,n=t)=>p(e,r,n)?0:Math.sign(r-e),h=(e,r,n=t)=>{for(let t=0;t<Math.max(e.length,r.length);t+=1)if(!p(e[t]||0,r[t]||0,n))return!1;return!0},f=(e,r=t)=>e>-r,d=(e,r=t)=>e>r,g=a,M=a,v=f,_=d,x=(e,r=t)=>e>-r&&e<1+r,b=(e,r=t)=>e>r&&e<1-r,y=t=>t,k=e=>e<-t?0:e>1.000001?1:e,P=Object.freeze({__proto__:null,fnTrue:a,fnSquare:i,fnAdd:c,fnNotUndefined:s,fnVecToAngle:l,fnAngleToVec:u,fnEpsilonEqual:p,fnEpsilonCompare:m,fnEpsilonEqualVectors:h,include:f,exclude:d,includeL:g,excludeL:M,includeR:v,excludeR:_,includeS:x,excludeS:b,clampLine:y,clampRay:e=>e<-t?0:e,clampSegment:k}),O=t=>Math.sqrt(t.map(i).reduce(c,0)),z=t=>Math.sqrt(t[0]*t[0]+t[1]*t[1]),A=t=>Math.sqrt(t[0]*t[0]+t[1]*t[1]+t[2]*t[2]),j=t=>t.map(i).reduce(c,0),L=t=>{const e=O(t);return 0===e?t:t.map((t=>t/e))},C=t=>{const e=z(t);return 0===e?t:[t[0]/e,t[1]/e]},N=t=>{const e=A(t);return 0===e?t:[t[0]/e,t[1]/e,t[2]/e]},S=(t,e)=>t.map((t=>t*e)),w=(t,e)=>[t[0]*e,t[1]*e],R=(t,e)=>[t[0]*e,t[1]*e,t[2]*e],I=(t,e)=>t.map(((t,r)=>t+(e[r]||0))),q=(t,e)=>[t[0]+e[0],t[1]+e[1]],E=(t,e)=>[t[0]+e[0],t[1]+e[1],t[2]+e[2]],T=(t,e)=>t.map(((t,r)=>t-(e[r]||0))),F=(t,e)=>[t[0]-e[0],t[1]-e[1]],V=(t,e)=>[t[0]-e[0],t[1]-e[1],t[2]-e[2]],B=(t,e)=>t.map(((r,n)=>t[n]*e[n])).reduce(c,0),D=(t,e)=>t[0]*e[0]+t[1]*e[1],Z=(t,e)=>w(q(t,e),.5),U=(t,e,r)=>{const n=1-r;return t.map(((t,o)=>t*n+(e[o]||0)*r))},H=(t,e)=>t[0]*e[1]-t[1]*e[0],X=(t,e)=>[t[1]*e[2]-t[2]*e[1],t[2]*e[0]-t[0]*e[2],t[0]*e[1]-t[1]*e[0]],Y=(t,e)=>Math.sqrt(t.map(((r,n)=>(t[n]-e[n])**2)).reduce(c,0)),$=(t,e)=>{const r=t[0]-e[0],n=t[1]-e[1];return Math.sqrt(r*r+n*n)},Q=t=>t.map((t=>-t)),W=t=>[-t[1],t[0]],G=t=>[t[1],-t[0]],J=(e,r,n=t)=>1-Math.abs(B(e,r))<n,K=(e,r,n=t)=>J(L(e),L(r),n),tt=(t,e)=>e.length===t?e:Array(t).fill(0).map(((t,r)=>e[r]?e[r]:t)),et=Object.freeze({__proto__:null,magnitude:O,magnitude2:z,magnitude3:A,magSquared:j,normalize:L,normalize2:C,normalize3:N,scale:S,scale2:w,scale3:R,add:I,add2:q,add3:E,subtract:T,subtract2:F,subtract3:V,dot:B,dot2:D,dot3:(t,e)=>t[0]*e[0]+t[1]*e[1]+t[2]*e[2],midpoint:(t,e)=>t.map(((t,r)=>(t+e[r])/2)),midpoint2:Z,midpoint3:(t,e)=>R(E(t,e),.5),average:function(){if(0===arguments.length)return[];const t=arguments[0].length>0?arguments[0].length:0,e=Array(t).fill(0);return Array.from(arguments).forEach((t=>e.forEach(((r,n)=>{e[n]+=t[n]||0})))),e.map((t=>t/arguments.length))},lerp:U,cross2:H,cross3:X,distance:Y,distance2:$,distance3:(t,e)=>{const r=t[0]-e[0],n=t[1]-e[1],o=t[2]-e[2];return Math.sqrt(r*r+n*n+o*o)},flip:Q,rotate90:W,rotate270:G,degenerate:(e,r=t)=>e.map((t=>Math.abs(t))).reduce(c,0)<r,parallelNormalized:J,parallel:K,parallel2:(e,r,n=t)=>Math.abs(H(e,r))<n,resize:tt,resizeUp:(t,e)=>[t,e].map((r=>tt(Math.max(t.length,e.length),r)))}),rt=[1,0,0,1],nt=rt.concat(0,0),ot=t=>t[0]*t[3]-t[1]*t[2],at=(t,e=[0,0])=>{const r=Math.atan2(t[1],t[0]),n=Math.cos(r),o=Math.sin(r),a=Math.cos(-r),i=Math.sin(-r),c=n*a+o*i,s=n*-i+o*a,l=o*a+-n*i,u=o*-i+-n*a;return[c,s,l,u,e[0]+c*-e[0]+-e[1]*l,e[1]+s*-e[0]+-e[1]*u]},it=Object.freeze({__proto__:null,identity2x2:rt,identity2x3:nt,multiplyMatrix2Vector2:(t,e)=>[t[0]*e[0]+t[2]*e[1]+t[4],t[1]*e[0]+t[3]*e[1]+t[5]],multiplyMatrix2Line2:(t,e,r)=>({vector:[t[0]*e[0]+t[2]*e[1],t[1]*e[0]+t[3]*e[1]],origin:[t[0]*r[0]+t[2]*r[1]+t[4],t[1]*r[0]+t[3]*r[1]+t[5]]}),multiplyMatrices2:(t,e)=>[t[0]*e[0]+t[2]*e[1],t[1]*e[0]+t[3]*e[1],t[0]*e[2]+t[2]*e[3],t[1]*e[2]+t[3]*e[3],t[0]*e[4]+t[2]*e[5]+t[4],t[1]*e[4]+t[3]*e[5]+t[5]],determinant2:ot,invertMatrix2:t=>{const e=ot(t);if(!(Math.abs(e)<1e-6||Number.isNaN(e))&&Number.isFinite(t[4])&&Number.isFinite(t[5]))return[t[3]/e,-t[1]/e,-t[2]/e,t[0]/e,(t[2]*t[5]-t[3]*t[4])/e,(t[1]*t[4]-t[0]*t[5])/e]},makeMatrix2Translate:(t=0,e=0)=>rt.concat(t,e),makeMatrix2Scale:(t=[1,1],e=[0,0])=>[t[0],0,0,t[1],t[0]*-e[0]+e[0],t[1]*-e[1]+e[1]],makeMatrix2Rotate:(t,e=[0,0])=>{const r=Math.cos(t),n=Math.sin(t);return[r,n,-n,r,e[0],e[1]]},makeMatrix2Reflect:at}),ct=Object.freeze([1,0,0,0,1,0,0,0,1]),st=Object.freeze(ct.concat(0,0,0)),lt=(t,e)=>[t[0]*e[0]+t[3]*e[1]+t[6]*e[2],t[1]*e[0]+t[4]*e[1]+t[7]*e[2],t[2]*e[0]+t[5]*e[1]+t[8]*e[2],t[0]*e[3]+t[3]*e[4]+t[6]*e[5],t[1]*e[3]+t[4]*e[4]+t[7]*e[5],t[2]*e[3]+t[5]*e[4]+t[8]*e[5],t[0]*e[6]+t[3]*e[7]+t[6]*e[8],t[1]*e[6]+t[4]*e[7]+t[7]*e[8],t[2]*e[6]+t[5]*e[7]+t[8]*e[8],t[0]*e[9]+t[3]*e[10]+t[6]*e[11]+t[9],t[1]*e[9]+t[4]*e[10]+t[7]*e[11]+t[10],t[2]*e[9]+t[5]*e[10]+t[8]*e[11]+t[11]],ut=t=>t[0]*t[4]*t[8]-t[0]*t[7]*t[5]-t[3]*t[1]*t[8]+t[3]*t[7]*t[2]+t[6]*t[1]*t[5]-t[6]*t[4]*t[2],pt=(t,e,r,n,o)=>{const a=ct.concat([0,1,2].map((t=>e[t]||0))),i=Math.cos(t),c=Math.sin(t);return a[3*r+r]=i,a[3*r+n]=(o?1:-1)*c,a[3*n+r]=(o?-1:1)*c,a[3*n+n]=i,a},mt=Object.freeze({__proto__:null,identity3x3:ct,identity3x4:st,isIdentity3x4:e=>st.map(((r,n)=>Math.abs(r-e[n])<t)).reduce(((t,e)=>t&&e),!0),multiplyMatrix3Vector3:(t,e)=>[t[0]*e[0]+t[3]*e[1]+t[6]*e[2]+t[9],t[1]*e[0]+t[4]*e[1]+t[7]*e[2]+t[10],t[2]*e[0]+t[5]*e[1]+t[8]*e[2]+t[11]],multiplyMatrix3Line3:(t,e,r)=>({vector:[t[0]*e[0]+t[3]*e[1]+t[6]*e[2],t[1]*e[0]+t[4]*e[1]+t[7]*e[2],t[2]*e[0]+t[5]*e[1]+t[8]*e[2]],origin:[t[0]*r[0]+t[3]*r[1]+t[6]*r[2]+t[9],t[1]*r[0]+t[4]*r[1]+t[7]*r[2]+t[10],t[2]*r[0]+t[5]*r[1]+t[8]*r[2]+t[11]]}),multiplyMatrices3:lt,determinant3:ut,invertMatrix3:t=>{const e=ut(t);if(Math.abs(e)<1e-6||Number.isNaN(e)||!Number.isFinite(t[9])||!Number.isFinite(t[10])||!Number.isFinite(t[11]))return;const r=[t[4]*t[8]-t[7]*t[5],-t[1]*t[8]+t[7]*t[2],t[1]*t[5]-t[4]*t[2],-t[3]*t[8]+t[6]*t[5],t[0]*t[8]-t[6]*t[2],-t[0]*t[5]+t[3]*t[2],t[3]*t[7]-t[6]*t[4],-t[0]*t[7]+t[6]*t[1],t[0]*t[4]-t[3]*t[1],-t[3]*t[7]*t[11]+t[3]*t[8]*t[10]+t[6]*t[4]*t[11]-t[6]*t[5]*t[10]-t[9]*t[4]*t[8]+t[9]*t[5]*t[7],t[0]*t[7]*t[11]-t[0]*t[8]*t[10]-t[6]*t[1]*t[11]+t[6]*t[2]*t[10]+t[9]*t[1]*t[8]-t[9]*t[2]*t[7],-t[0]*t[4]*t[11]+t[0]*t[5]*t[10]+t[3]*t[1]*t[11]-t[3]*t[2]*t[10]-t[9]*t[1]*t[5]+t[9]*t[2]*t[4]],n=1/e;return r.map((t=>t*n))},makeMatrix3Translate:(t=0,e=0,r=0)=>ct.concat(t,e,r),makeMatrix3RotateX:(t,e=[0,0,0])=>pt(t,e,1,2,!0),makeMatrix3RotateY:(t,e=[0,0,0])=>pt(t,e,0,2,!1),makeMatrix3RotateZ:(t,e=[0,0,0])=>pt(t,e,0,1,!0),makeMatrix3Rotate:(t,e=[0,0,1],r=[0,0,0])=>{const n=[0,1,2].map((t=>r[t]||0)),[o,a,i]=tt(3,L(e)),c=Math.cos(t),s=Math.sin(t),l=1-c,u=ct.concat(-n[0],-n[1],-n[2]),p=ct.concat(n[0],n[1],n[2]);return lt(p,lt([l*o*o+c,l*a*o+i*s,l*i*o-a*s,l*o*a-i*s,l*a*a+c,l*i*a+o*s,l*o*i+a*s,l*a*i-o*s,l*i*i+c,0,0,0],u))},makeMatrix3Scale:(t=[1,1,1],e=[0,0,0])=>[t[0],0,0,0,t[1],0,0,0,t[2],t[0]*-e[0]+e[0],t[1]*-e[1]+e[1],t[2]*-e[2]+e[2]],makeMatrix3ReflectZ:(t,e=[0,0])=>{const r=at(t,e);return[r[0],r[1],0,r[2],r[3],0,0,0,1,r[4],r[5],0]}}),ht=t=>null!=t&&"function"==typeof t[Symbol.iterator],ft=function(){switch(arguments.length){case void 0:case 0:return Array.from(arguments);case 1:return ht(arguments[0])&&"string"!=typeof arguments[0]?ft(...arguments[0]):[arguments[0]];default:return Array.from(arguments).map((t=>ht(t)?[...ft(t)]:t))}},dt=function(){switch(arguments.length){case void 0:case 0:return Array.from(arguments);case 1:return ht(arguments[0])&&"string"!=typeof arguments[0]?dt(...arguments[0]):[arguments[0]];default:return Array.from(arguments).map((t=>ht(t)?[...dt(t)]:t)).reduce(((t,e)=>t.concat(e)),[])}},gt=Object.freeze({__proto__:null,semiFlattenArrays:ft,flattenArrays:dt}),Mt=function(){let t=dt(arguments);return t.length>0&&"object"==typeof t[0]&&null!==t[0]&&!Number.isNaN(t[0].x)&&(t=["x","y","z"].map((e=>t[0][e])).filter(s)),t.filter((t=>"number"==typeof t))},vt=function(){return ft(arguments).map((t=>Mt(t)))},_t=(t,e)=>({vector:t||[],origin:e||[]}),xt=[[0,1,3,4,9,10],[0,1,2,3,4,5,6,7,8,9,10,11],[0,1,2,void 0,3,4,5,void 0,6,7,8,void 0,9,10,11]];[11,7,3].forEach((t=>delete xt[2][t]));const bt=t=>t<8?xt[0]:t<13?xt[1]:xt[2],yt=function(t){const e=`${t}`.match(/(?:\.(\d+))?(?:[eE]([+-]?\d+))?$/);return e?Math.max(0,(e[1]?e[1].length:0)-(e[2]?+e[2]:0)):0},kt=(t,e,r)=>{const n=t.map(((t,n)=>({i:n,d:r(e,t)})));let o,a=1/0;for(let t=0;t<n.length;t+=1)n[t].d<a&&(o=t,a=n[t].d);return o},Pt=(e,r=t)=>{if(!e.length)return;const n=((e,r=0,n=m,o=t)=>{let a=[0];for(let t=1;t<e.length;t+=1)switch(n(e[t][r],e[a[0]][r],o)){case 0:a.push(t);break;case 1:a=[t]}return a})(e,0,m,r);let o=0;for(let t=1;t<n.length;t+=1)e[n[t]][1]<e[n[o]][1]&&(o=t);return n[o]},Ot=(t,e,r)=>t.map(((t,n)=>({i:n,n:r(t,e)}))).sort(((t,e)=>t.n-e.n)).map((t=>t.i)),zt=(e,r=t)=>{const n=[[0]];let o=0;for(let t=1;t<e.length;t+=1)p(e[t],e[t-1],r)?n[o].push(t):(o=n.length,n.push([t]));return n},At=(e=[],r=t)=>{const n=Pt(e,r),o=e.map((t=>F(t,e[n]))).map((t=>C(t))).map((t=>D([0,1],t))),a=o.map(((t,e)=>({a:t,i:e}))).sort(((t,e)=>t.a-e.a)).map((t=>t.i)).filter((t=>t!==n));return[[n]].concat(zt(a.map((t=>o[t])),r).map((t=>t.map((t=>a[t])))).map((t=>1===t.length?t:t.map((t=>({i:t,len:$(e[t],e[n])}))).sort(((t,e)=>t.len-e.len)).map((t=>t.i)))))},jt={...o,...P,...Object.freeze({__proto__:null,getVector:Mt,getVectorOfVectors:vt,getSegment:function(){const t=ft(arguments);return 4===t.length?[[t[0],t[1]],[t[2],t[3]]]:t.map((t=>Mt(t)))},getLine:function(){const t=ft(arguments);return 0===t.length?_t([],[]):t[0].constructor===Object&&void 0!==t[0].vector?_t(t[0].vector||[],t[0].origin||[]):"number"==typeof t[0]?_t(Mt(t)):_t(...t.map((t=>Mt(t))))},getMatrix3x4:function(){const t=dt(arguments),e=[...st];return bt(t.length).forEach(((r,n)=>{null!=t[n]&&(e[r]=t[n])})),e},pointsToLine:(...t)=>{const e=vt(...t);return{vector:T(e[1],e[0]),origin:e[0]}},rayLineToUniqueLine:({vector:t,origin:e})=>{const r=O(t),n=W(t),o=B(e,n)/r;return{normal:S(n,1/r),distance:o}},uniqueLineToRayLine:({normal:t,distance:e})=>_t(G(t),S(t,e))}),...gt,...Object.freeze({__proto__:null,cleanNumber:function(t,e=15){if("number"!=typeof t)return t;const r=parseFloat(t.toFixed(e));return yt(r)===Math.min(e,yt(t))?t:r}}),...Object.freeze({__proto__:null,smallestComparisonSearch:kt,minimum2DPointIndex:Pt}),...Object.freeze({__proto__:null,sortAgainstItem:Ot,sortPointsAlongVector:(t,e)=>Ot(t,e,B),clusterIndicesOfSortedNumbers:zt,radialSortPointIndices2:At})},Lt=Object.freeze([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]),Ct=(t,e)=>[t[0]*e[0]+t[4]*e[1]+t[8]*e[2]+t[12]*e[3],t[1]*e[0]+t[5]*e[1]+t[9]*e[2]+t[13]*e[3],t[2]*e[0]+t[6]*e[1]+t[10]*e[2]+t[14]*e[3],t[3]*e[0]+t[7]*e[1]+t[11]*e[2]+t[15]*e[3],t[0]*e[4]+t[4]*e[5]+t[8]*e[6]+t[12]*e[7],t[1]*e[4]+t[5]*e[5]+t[9]*e[6]+t[13]*e[7],t[2]*e[4]+t[6]*e[5]+t[10]*e[6]+t[14]*e[7],t[3]*e[4]+t[7]*e[5]+t[11]*e[6]+t[15]*e[7],t[0]*e[8]+t[4]*e[9]+t[8]*e[10]+t[12]*e[11],t[1]*e[8]+t[5]*e[9]+t[9]*e[10]+t[13]*e[11],t[2]*e[8]+t[6]*e[9]+t[10]*e[10]+t[14]*e[11],t[3]*e[8]+t[7]*e[9]+t[11]*e[10]+t[15]*e[11],t[0]*e[12]+t[4]*e[13]+t[8]*e[14]+t[12]*e[15],t[1]*e[12]+t[5]*e[13]+t[9]*e[14]+t[13]*e[15],t[2]*e[12]+t[6]*e[13]+t[10]*e[14]+t[14]*e[15],t[3]*e[12]+t[7]*e[13]+t[11]*e[14]+t[15]*e[15]],Nt=t=>{const e=t[10]*t[15]-t[11]*t[14],r=t[9]*t[15]-t[11]*t[13],n=t[9]*t[14]-t[10]*t[13],o=t[8]*t[15]-t[11]*t[12],a=t[8]*t[14]-t[10]*t[12],i=t[8]*t[13]-t[9]*t[12];return t[0]*(t[5]*e-t[6]*r+t[7]*n)-t[1]*(t[4]*e-t[6]*o+t[7]*a)+t[2]*(t[4]*r-t[5]*o+t[7]*i)-t[3]*(t[4]*n-t[5]*a+t[6]*i)},St=Object.freeze([1,0,0,0,0,1,0,0,0,0,1,0]),wt=(t=0,e=0,r=0)=>[...St,t,e,r,1],Rt=(t,e,r,n,o)=>{const a=wt(...e),i=Math.cos(t),c=Math.sin(t);return a[4*r+r]=i,a[4*r+n]=(o?1:-1)*c,a[4*n+r]=(o?-1:1)*c,a[4*n+n]=i,a},It={...et,...it,...mt,...Object.freeze({__proto__:null,identity4x4:Lt,isIdentity4x4:e=>Lt.map(((r,n)=>Math.abs(r-e[n])<t)).reduce(((t,e)=>t&&e),!0),multiplyMatrix4Vector3:(t,e)=>[t[0]*e[0]+t[4]*e[1]+t[8]*e[2]+t[12],t[1]*e[0]+t[5]*e[1]+t[9]*e[2]+t[13],t[2]*e[0]+t[6]*e[1]+t[10]*e[2]+t[14]],multiplyMatrix4Line3:(t,e,r)=>({vector:[t[0]*e[0]+t[4]*e[1]+t[8]*e[2],t[1]*e[0]+t[5]*e[1]+t[9]*e[2],t[2]*e[0]+t[6]*e[1]+t[10]*e[2]],origin:[t[0]*r[0]+t[4]*r[1]+t[8]*r[2]+t[12],t[1]*r[0]+t[5]*r[1]+t[9]*r[2]+t[13],t[2]*r[0]+t[6]*r[1]+t[10]*r[2]+t[14]]}),multiplyMatrices4:Ct,determinant4:Nt,invertMatrix4:t=>{const e=Nt(t);if(Math.abs(e)<1e-6||Number.isNaN(e)||!Number.isFinite(t[12])||!Number.isFinite(t[13])||!Number.isFinite(t[14]))return;const r=t[10]*t[15]-t[11]*t[14],n=t[9]*t[15]-t[11]*t[13],o=t[9]*t[14]-t[10]*t[13],a=t[8]*t[15]-t[11]*t[12],i=t[8]*t[14]-t[10]*t[12],c=t[8]*t[13]-t[9]*t[12],s=t[6]*t[15]-t[7]*t[14],l=t[5]*t[15]-t[7]*t[13],u=t[5]*t[14]-t[6]*t[13],p=t[6]*t[11]-t[7]*t[10],m=t[5]*t[11]-t[7]*t[9],h=t[5]*t[10]-t[6]*t[9],f=t[4]*t[15]-t[7]*t[12],d=t[4]*t[14]-t[6]*t[12],g=t[4]*t[11]-t[7]*t[8],M=t[4]*t[10]-t[6]*t[8],v=t[4]*t[13]-t[5]*t[12],_=t[4]*t[9]-t[5]*t[8],x=[+(t[5]*r-t[6]*n+t[7]*o),-(t[1]*r-t[2]*n+t[3]*o),+(t[1]*s-t[2]*l+t[3]*u),-(t[1]*p-t[2]*m+t[3]*h),-(t[4]*r-t[6]*a+t[7]*i),+(t[0]*r-t[2]*a+t[3]*i),-(t[0]*s-t[2]*f+t[3]*d),+(t[0]*p-t[2]*g+t[3]*M),+(t[4]*n-t[5]*a+t[7]*c),-(t[0]*n-t[1]*a+t[3]*c),+(t[0]*l-t[1]*f+t[3]*v),-(t[0]*m-t[1]*g+t[3]*_),-(t[4]*o-t[5]*i+t[6]*c),+(t[0]*o-t[1]*i+t[2]*c),-(t[0]*u-t[1]*d+t[2]*v),+(t[0]*h-t[1]*M+t[2]*_)],b=1/e;return x.map((t=>t*b))},makeMatrix4Translate:wt,makeMatrix4RotateX:(t,e=[0,0,0])=>Rt(t,e,1,2,!0),makeMatrix4RotateY:(t,e=[0,0,0])=>Rt(t,e,0,2,!1),makeMatrix4RotateZ:(t,e=[0,0,0])=>Rt(t,e,0,1,!0),makeMatrix4Rotate:(t,e=[0,0,1],r=[0,0,0])=>{const n=[0,1,2].map((t=>r[t]||0)),[o,a,i]=tt(3,L(e)),c=Math.cos(t),s=Math.sin(t),l=1-c,u=wt(-n[0],-n[1],-n[2]),p=wt(n[0],n[1],n[2]);return Ct(p,Ct([l*o*o+c,l*a*o+i*s,l*i*o-a*s,0,l*o*a-i*s,l*a*a+c,l*i*a+o*s,0,l*o*i+a*s,l*a*i-o*s,l*i*i+c,0,0,0,0,1],u))},makeMatrix4Scale:(t=[1,1,1],e=[0,0,0])=>[t[0],0,0,0,0,t[1],0,0,0,0,t[2],0,t[0]*-e[0]+e[0],t[1]*-e[1]+e[1],t[2]*-e[2]+e[2],1],makeMatrix4ReflectZ:(t,e=[0,0])=>{const r=at(t,e);return[r[0],r[1],0,0,r[2],r[3],0,0,0,0,1,0,r[4],r[5],0,1]},makePerspectiveMatrix4:(t,e,r,n)=>{const o=Math.tan(.5*Math.PI-.5*t),a=1/(r-n);return[o/e,0,0,0,0,o,0,0,0,0,(r+n)*a,-1,0,0,r*n*a*2,0]},makeOrthographicMatrix4:(t,e,r,n,o,a)=>[2/(e-n),0,0,0,0,2/(t-r),0,0,0,0,2/(o-a),0,(n+e)/(n-e),(r+t)/(r-t),(o+a)/(o-a),1],makeLookAtMatrix4:(t,e,r)=>{const n=N(V(t,e)),o=N(X(r,n)),a=N(X(n,o));return[o[0],o[1],o[2],0,a[0],a[1],a[2],0,n[0],n[1],n[2],0,t[0],t[1],t[2],1]}}),...Object.freeze({__proto__:null,quaternionFromTwoVectors:(t,e)=>{const r=X(t,e),n=[r[0],r[1],r[2],B(t,e)];return n[3]+=O(n),L(n)},matrix4FromQuaternion:t=>Ct([t[3],t[2],-t[1],t[0],-t[2],t[3],t[0],t[1],t[1],-t[0],t[3],t[2],-t[0],-t[1],-t[2],t[3]],[t[3],t[2],-t[1],-t[0],-t[2],t[3],t[0],-t[1],t[1],-t[0],t[3],-t[2],t[0],t[1],t[2],t[3]])})},qt=(t,e)=>{for(;t<0;)t+=n;for(;e<0;)e+=n;for(;t>n;)t-=n;for(;e>n;)e-=n;const r=t-e;return r>=0?r:n-(e-t)},Et=(t,e)=>{for(;t<0;)t+=n;for(;e<0;)e+=n;for(;t>n;)t-=n;for(;e>n;)e-=n;const r=e-t;return r>=0?r:n-(t-e)},Tt=(t,e)=>{const r=e[0]*t[0]+e[1]*t[1],o=e[0]*t[1]-e[1]*t[0];let a=Math.atan2(o,r);return a<0&&(a+=n),a},Ft=(t,e)=>{const r=t[0]*e[0]+t[1]*e[1],o=t[0]*e[1]-t[1]*e[0];let a=Math.atan2(o,r);return a<0&&(a+=n),a},Vt=(t,e)=>u(l(t)-Tt(t,e)/2),Bt=(t,e,r)=>{const n=qt(t,e)/r;return Array.from(Array(r-1)).map(((e,r)=>t+n*(r+1)))},Dt=(t,e,r)=>{const n=Et(t,e)/r;return Array.from(Array(r-1)).map(((e,r)=>t+n*(r+1)))},Zt=(t,e,r)=>{const n=Math.atan2(t[1],t[0]),o=Math.atan2(e[1],e[0]);return Dt(n,o,r).map(u)},Ut=function(){const t=Array.from(arguments).flat(),e=t.map(((t,e)=>e)).sort(((e,r)=>t[e]-t[r]));return e.slice(e.indexOf(0),e.length).concat(e.slice(0,e.indexOf(0)))},Ht=function(){const t=Array.from(arguments).flat(),e=Ut(t).map((e=>t[e]));return e.map(((t,e,r)=>[t,r[(e+1)%r.length]])).map((t=>Et(t[0],t[1])))},Xt=(e,r,n,o=t)=>{const a=C(F(r,e)),i=C(F(n,e)),c=H(a,i);return p(c,0,o)?p($(e,r)+$(r,n),$(e,n))?0:void 0:Math.sign(c)},Yt=Object.freeze({__proto__:null,isCounterClockwiseBetween:(t,e,r)=>{for(;r<e;)r+=n;for(;t>e;)t-=n;for(;t<e;)t+=n;return t<r},clockwiseAngleRadians:qt,counterClockwiseAngleRadians:Et,clockwiseAngle2:Tt,counterClockwiseAngle2:Ft,clockwiseBisect2:Vt,counterClockwiseBisect2:(t,e)=>u(l(t)+Ft(t,e)/2),clockwiseSubsectRadians:Bt,counterClockwiseSubsectRadians:Dt,clockwiseSubsect2:(t,e,r)=>{const n=Math.atan2(t[1],t[0]),o=Math.atan2(e[1],e[0]);return Bt(n,o,r).map(u)},counterClockwiseSubsect2:Zt,counterClockwiseOrderRadians:Ut,counterClockwiseOrder2:function(){return Ut(ft(arguments).map(l))},counterClockwiseSectorsRadians:Ht,counterClockwiseSectors2:function(){return Ht(ft(arguments).map(l))},threePointTurnDirection:Xt}),$t=(e=[],r=!1,n=t)=>{if(e.length<2)return[];const o=At(e,n).map((t=>1===t.length?t:(t=>t.concat(t.slice(0,-1).reverse()))(t))).flat();o.push(o[0]);const a=[o[0]];let i=1;const c={"-1":()=>a.pop(),1:t=>{a.push(t),i+=1},undefined:()=>{i+=1}};for(c[0]=r?c[1]:c[-1];i<o.length;){if(a.length<2){a.push(o[i]),i+=1;continue}const t=a[a.length-2],r=a[a.length-1],s=o[i];c[Xt(...[t,r,s].map((t=>e[t])),n)](s)}return a.pop(),a},Qt=Object.freeze({__proto__:null,convexHullIndices:$t,convexHull:(e=[],r=!1,n=t)=>$t(e,r,n).map((t=>e[t]))}),Wt=(e,r,n,o=t)=>{const a=B(e.vector,r.vector),i=H(e.vector,r.vector),c=H(F(r.origin,e.origin),r.vector)/i,s=[e.vector,r.vector].map((t=>L(t))),l=(i>-o?[[e.vector,r.vector],[Q(r.vector),e.vector]]:[[r.vector,e.vector],[Q(e.vector),r.vector]]).map((t=>Zt(t[0],t[1],n))),u=Math.abs(H(...s))<o,p=u?void 0:q(e.origin,w(e.vector,c)),m=Array.from(Array(n-1)),h=u?m.map(((t,o)=>U(e.origin,r.origin,(o+1)/n))):m.map((()=>p)),f=l.map((t=>t.map(((t,e)=>({vector:t,origin:[...h[e]]})))));return u&&(f[a>-o?1:0]=[]),f},Gt=Object.freeze({__proto__:null,collinearBetween:(e,r,n,o=!1,a=t)=>{if([e,n].map((t=>h(r,t))).reduce(((t,e)=>t||e),!1))return o;const i=[[e,r],[r,n]].map((t=>T(t[1],t[0]))).map((t=>L(t)));return p(1,B(...i),a)},lerpLines:(t,e,r)=>({vector:U(t.vector,e.vector,r),origin:U(t.origin,e.origin,r)}),pleat:Wt,bisectLines2:(e,r,n=t)=>{const o=Wt(e,r,2,n).map((t=>t[0]));return o.forEach(((t,e)=>{void 0===t&&delete o[e]})),o}}),Jt=({vector:e,origin:r},n,o=y,a=t)=>{r=tt(e.length,r),n=tt(e.length,n);const i=j(e),c=T(n,r),s=o(B(e,c)/i,a);return I(r,S(e,s))},Kt=Object.freeze({__proto__:null,nearestPoint2:(t,e)=>{const r=kt(t,e,$);return void 0===r?void 0:t[r]},nearestPoint:(t,e)=>{const r=kt(t,e,Y);return void 0===r?void 0:t[r]},nearestPointOnLine:Jt,nearestPointOnPolygon:(t,e)=>t.map(((t,e,r)=>T(r[(e+1)%r.length],t))).map(((e,r)=>({vector:e,origin:t[r]}))).map((t=>Jt(t,e,k))).map(((t,r)=>({point:t,edge:r,distance:Y(t,e)}))).sort(((t,e)=>t.distance-e.distance)).shift(),nearestPointOnCircle:({radius:t,origin:e},r)=>I(e,S(L(T(r,e)),t))}),te=t=>Array.from(Array(Math.floor(t))).map(((e,r)=>n*(r/t))),ee=(t,e)=>t.map((t=>[e*Math.cos(t),e*Math.sin(t)])),re=(t=3,e=1)=>ee(te(t),e),ne=(t=3,e=1)=>{const r=Math.PI/t,n=te(t).map((t=>t+r));return ee(n,e)},oe=t=>.5*t.map(((t,e,r)=>{const n=r[(e+1)%r.length];return t[0]*n[1]-n[0]*t[1]})).reduce(c,0),ae=Object.freeze({__proto__:null,makePolygonCircumradius:re,makePolygonCircumradiusSide:ne,makePolygonInradius:(t=3,e=1)=>re(t,e/Math.cos(Math.PI/t)),makePolygonInradiusSide:(t=3,e=1)=>ne(t,e/Math.cos(Math.PI/t)),makePolygonSideLength:(t=3,e=1)=>re(t,e/2/Math.sin(Math.PI/t)),makePolygonSideLengthSide:(t=3,e=1)=>ne(t,e/2/Math.sin(Math.PI/t)),makePolygonNonCollinear:(e,r=t)=>{const n=e.map(((t,e,r)=>[t,r[(e+1)%r.length]])).map((t=>T(t[1],t[0]))).map(((t,e,r)=>[t,r[(e+r.length-1)%r.length]])).map((t=>!K(t[1],t[0],r)));return e.filter(((t,e)=>n[e]))},circumcircle:(e,r,n)=>{const o=r[0]-e[0],a=r[1]-e[1],i=n[0]-e[0],c=n[1]-e[1],s=o*(e[0]+r[0])+a*(e[1]+r[1]),l=i*(e[0]+n[0])+c*(e[1]+n[1]),u=2*(o*(n[1]-r[1])-a*(n[0]-r[0]));if(Math.abs(u)<t){const t=Math.min(e[0],r[0],n[0]),o=Math.min(e[1],r[1],n[1]),a=.5*(Math.max(e[0],r[0],n[0])-t),i=.5*(Math.max(e[1],r[1],n[1])-o);return{origin:[t+a,o+i],radius:Math.sqrt(a*a+i*i)}}const p=[(c*s-a*l)/u,(o*l-i*s)/u],m=p[0]-e[0],h=p[1]-e[1];return{origin:p,radius:Math.sqrt(m*m+h*h)}},signedArea:oe,centroid:t=>{const e=1/(6*oe(t));return t.map(((t,e,r)=>{const n=r[(e+1)%r.length],o=t[0]*n[1]-n[0]*t[1];return[(t[0]+n[0])*o,(t[1]+n[1])*o]})).reduce(((t,e)=>[t[0]+e[0],t[1]+e[1]]),[0,0]).map((t=>t*e))},boundingBox:(t,e=0)=>{if(!t||!t.length)return;const r=Array(t[0].length).fill(1/0),n=Array(t[0].length).fill(-1/0);t.forEach((t=>t.forEach(((t,o)=>{t<r[o]&&(r[o]=t-e),t>n[o]&&(n[o]=t+e)}))));const o=n.map(((t,e)=>t-r[e]));return{min:r,max:n,span:o}}}),ie=({vector:e,origin:r},n,o=M,a=t)=>{const i=F(n,r),c=j(e),s=Math.sqrt(c);if(s<a)return!1;const l=H(i,e.map((t=>t/s))),u=D(i,e)/c;return Math.abs(l)<a&&o(u,a/s)},ce=(e,r,n=d,o=t)=>e.map(((t,e,r)=>[t,r[(e+1)%r.length]])).map((t=>H(C(F(t[1],t[0])),F(r,t[0])))).map((t=>n(t,o))).map(((t,e,r)=>t===r[0])).reduce(((t,e)=>t&&e),!0),se=Object.freeze({__proto__:null,overlapBoundingBoxes:(e,r,n=t)=>{const o=Math.min(e.min.length,r.min.length);for(let t=0;t<o;t+=1)if(e.min[t]>r.max[t]+n||e.max[t]<r.min[t]-n)return!1;return!0},overlapCirclePoint:({radius:e,origin:r},n,o=d,a=t)=>o(e-$(r,n),a),overlapLineLine:(e,r,n=M,o=M,a=t)=>{const i=H(e.vector,r.vector),c=-i,s=F(r.origin,e.origin);if(Math.abs(i)<a){if(Math.abs(H(s,e.vector))>a)return!1;const t=F(e.origin,r.origin),i=q(t,e.vector),c=s,l=q(c,r.vector),u=D(e.vector,e.vector),p=D(e.vector,e.vector),m=D(t,r.vector)/p,h=D(i,r.vector)/p,f=D(c,e.vector)/u,d=D(l,e.vector)/u;return n(f,a)||n(d,a)||o(m,a)||o(h,a)}const l=[-s[0],-s[1]],u=H(s,r.vector)/i,p=H(l,e.vector)/c;return n(u,a/z(e.vector))&&o(p,a/z(r.vector))},overlapLinePoint:ie,overlapConvexPolygonPoint:ce,overlapConvexPolygons:(e,r,n=t)=>{for(let t=0;t<2;t+=1){const o=0===t?e:r,a=0===t?r:e;for(let t=0;t<o.length;t+=1){const e=o[t],r=W(F(o[(t+1)%o.length],o[t])),i=a.map((t=>F(t,e))).map((t=>D(r,t))),c=o[(t+2)%o.length],s=D(r,F(c,e))>0;if(i.map((t=>s?t<n:t>-n)).reduce(((t,e)=>t&&e),!0))return!1}}return!0}}),le=(e,r,n=g,o=g,a=t)=>{const i=H(C(e.vector),C(r.vector));if(Math.abs(i)<a)return;const c=H(e.vector,r.vector),s=-c,l=[r.origin[0]-e.origin[0],r.origin[1]-e.origin[1]],u=[-l[0],-l[1]],p=H(l,r.vector)/c,m=H(u,e.vector)/s;return n(p,a/z(e.vector))&&o(m,a/z(r.vector))?q(e.origin,w(e.vector,p)):void 0},ue=(t,e,r)=>{const n=e[0]-t[0],o=e[1]-t[1],a=n*Math.cos(r)+o*Math.sin(r),i=o*Math.cos(r)-n*Math.sin(r);return[t[0]+a,t[1]+i]},pe=t=>{for(let e=1;e<t.length;e+=1)if(!h(t[0],t[e]))return[t[0],t[e]]},me=(e,{vector:r,origin:n},o=x,a=g,i=t)=>{const c=e.map(((t,e,r)=>[t,r[(e+1)%r.length]])).map((t=>le({vector:F(t[1],t[0]),origin:t[0]},{vector:r,origin:n},o,a,i))).filter((t=>void 0!==t));switch(c.length){case 0:return;case 1:return[c];default:return pe(c)||[c[0]]}},he=Object.freeze({__proto__:null,intersectLineLine:le,intersectCircleLine:(e,r,n=g,o=t)=>{const a=r.vector[0]**2+r.vector[1]**2,i=Math.sqrt(a),c=0===i?r.vector:r.vector.map((t=>t/i)),s=W(c),l=F(r.origin,e.origin),u=H(l,c);if(Math.abs(u)>e.radius+o)return;const p=Math.sqrt(e.radius**2-u**2),m=(t,r)=>e.origin[r]-s[r]*u+c[r]*t,h=Math.abs(e.radius-Math.abs(u))<o?[p].map((t=>[t,t].map(m))):[-p,p].map((t=>[t,t].map(m))),f=h.map((t=>t.map(((t,e)=>t-r.origin[e])))).map((t=>t[0]*r.vector[0]+r.vector[1]*t[1])).map((t=>t/a));return h.filter(((t,e)=>n(f[e],o)))},intersectCircleCircle:(e,r,n=t)=>{const o=e.radius<r.radius?e.radius:r.radius,a=e.radius<r.radius?r.radius:e.radius,i=e.radius<r.radius?e.origin:r.origin,c=e.radius<r.radius?r.origin:e.origin,s=[i[0]-c[0],i[1]-c[1]],l=Math.sqrt(s[0]**2+s[1]**2);if(l<n)return;const u=s.map(((t,e)=>t/l*a+c[e]));if(Math.abs(a+o-l)<n||Math.abs(a-(o+l))<n)return[u];if(l+o<a||a+o<l)return;const p=(m=(o*o-l*l-a*a)/(-2*l*a))>=1?0:m<=-1?Math.PI:Math.acos(m);var m;return[ue(c,u,+p),ue(c,u,-p)]},intersectConvexPolygonLine:(e,{vector:r,origin:n},o=x,a=M,i=t)=>{const c=me(e,{vector:r,origin:n},o,a,i);let s;switch(a){case _:s=v;break;case b:s=x;break;default:return c}const l=me(e,{vector:r,origin:n},x,s,i);if(void 0===l)return;const u=pe(l);if(void 0===u)switch(a){case _:return ce(e,n,d,i)?l:void 0;case b:return ce(e,q(n,r),d,i)||ce(e,n,d,i)?l:void 0;case M:default:return}return ce(e,Z(...u),d,i)?u:c}}),fe=(t,e,r)=>{const n=t.map(((t,e)=>({vector:r[e],origin:t}))).map(((t,e,r)=>le(t,r[(e+1)%r.length],_,_))),o=e.map(((t,e)=>Jt(t,n[e],(t=>t))));if(3===t.length)return t.map((t=>({type:"skeleton",points:[t,n[0]]}))).concat([{type:"perpendicular",points:[o[0],n[0]]}]);const a=n.map(((t,e)=>Y(t,o[e])));let i=0;a.forEach(((t,e)=>{t<a[i]&&(i=e)}));const c=[{type:"skeleton",points:[t[i],n[i]]},{type:"skeleton",points:[t[(i+1)%t.length],n[i]]},{type:"perpendicular",points:[o[i],n[i]]}],s=Vt(Q(e[(i+e.length-1)%e.length].vector),e[(i+1)%e.length].vector),l=i===t.length-1;return t.splice(i,2,n[i]),e.splice(i,1),r.splice(i,2,s),l&&(t.splice(0,1),r.splice(0,1),e.push(e.shift())),c.concat(fe(t,e,r))},de={...Qt,...Gt,...Kt,...ae,...Yt,straightSkeleton:t=>{const e=t.map(((t,e,r)=>[t,r[(e+1)%r.length]])).map((t=>({vector:T(t[1],t[0]),origin:t[0]}))),r=t.map(((t,e,r)=>[(e-1+r.length)%r.length,e,(e+1)%r.length].map((t=>r[t])))).map((t=>[T(t[0],t[1]),T(t[2],t[1])])).map((t=>Vt(...t)));return fe([...t],e,r)}},ge=(t,e,r)=>q(e,w(t,r)),Me=(e,r,n,o,a)=>e.map(((t,e,r)=>[F(r[(e+1)%r.length],t),t])).map((e=>((e,r,n,o,a=x,i=t)=>{const c=H(C(e),C(n));if(Math.abs(c)<i)return;const s=H(e,n),l=-s,u=F(o,r),p=Q(u),m=H(u,n)/s;return a(H(p,e)/l,i/z(n))?m:void 0})(r,n,e[0],e[1],o,a))).filter(s).sort(((t,e)=>t-e));return{...jt,...It,...de,...{...Object.freeze({__proto__:null,enclosingBoundingBoxes:(e,r,n=t)=>{const o=Math.min(e.min.length,r.min.length);for(let t=0;t<o;t+=1)if(r.min[t]<e.min[t]-n||r.max[t]>e.max[t]+n)return!1;return!0},enclosingPolygonPolygon:(t,e,r=f)=>{const n=t.map((t=>ce(e,t,r))).reduce(((t,e)=>t||e),!1),o=e.map((t=>ce(e,t,r))).reduce(((t,e)=>t&&e),!0);return!n&&o}}),...se,...he,...Object.freeze({__proto__:null,clipLineConvexPolygon:(e,{vector:r,origin:n},o=f,a=g,i=t)=>{const c=Me(e,r,n,x,i);if(c.length<2)return;const s=((t,e,r)=>{let n=0,o=t.length-1;for(;n<o&&!e(t[n+1]-t[n],r);)n+=1;for(;o>n&&!e(t[o]-t[o-1],r);)o-=1;if(!(n>=o))return[t[n],t[o]]})(c,o,2*i/z(r));if(void 0===s)return;const l=s.map((t=>a(t)?t:t<.5?0:1));if(Math.abs(l[0]-l[1])<2*i/z(r))return;const u=ge(r,n,(l[0]+l[1])/2);return ce(e,u,o,i)?l.map((t=>ge(r,n,t))):void 0},clipPolygonPolygon:(e,r,n=t)=>{const o=(t,e,r)=>(r[0]-e[0])*(t[1]-e[1])>(r[1]-e[1])*(t[0]-e[0])+n,a=(t,e,r,n)=>{const o=F(t,e),a=F(n,r),i=H(t,e),c=H(n,r),s=1/H(o,a);return w(F(w(a,i),w(o,c)),s)};let i=e,c=r[r.length-1];for(let t=0;t<r.length;t+=1){const e=r[t],n=i;i=[];let s=n[n.length-1];for(let t=0;t<n.length;t+=1){const r=n[t];o(r,c,e)?(o(s,c,e)||i.push(a(c,e,r,s)),i.push(r)):o(s,c,e)&&i.push(a(c,e,r,s)),s=r}c=e}return 0===i.length?void 0:i}}),...Object.freeze({__proto__:null,splitConvexPolygon:(t,e)=>{const r=t.map(((t,r)=>({point:ie(e,t,g)?t:null,at_index:r}))).filter((t=>null!=t.point)),n=t.map(((t,e,r)=>({vector:T(t,r[(e+1)%r.length]),origin:r[(e+1)%r.length]}))).map(((t,r)=>({point:le(e,t,M,b),at_index:r}))).filter((t=>null!=t.point));if(2===n.length){const e=n.slice().sort(((t,e)=>t.at_index-e.at_index)),r=t.slice(e[1].at_index+1).concat(t.slice(0,e[0].at_index+1));r.push(e[0].point),r.push(e[1].point);const o=t.slice(e[0].at_index+1,e[1].at_index+1);return o.push(e[1].point),o.push(e[0].point),[r,o]}if(1===n.length&&1===r.length){r[0].type="v",n[0].type="e";const e=r.concat(n).sort(((t,e)=>t.at_index-e.at_index)),o=t.slice(e[1].at_index+1).concat(t.slice(0,e[0].at_index+1));"e"===e[0].type&&o.push(e[0].point),o.push(e[1].point);const a=t.slice(e[0].at_index+1,e[1].at_index+1);return"e"===e[1].type&&a.push(e[1].point),a.push(e[0].point),[o,a]}if(2===r.length){const e=r.slice().sort(((t,e)=>t.at_index-e.at_index));return[t.slice(e[1].at_index).concat(t.slice(0,e[0].at_index+1)),t.slice(e[0].at_index,e[1].at_index+1)]}return[t.slice()]}})}}}));